[
  {
    "objectID": "univariate_ts_models.html",
    "href": "univariate_ts_models.html",
    "title": "Univariate TS Models",
    "section": "",
    "text": "Note\n\n\n\nFor TAs:\n1. The differencing and ADF test have already been done in the EDA section. Here, I directly check the ACF and PACF plots of the stationary series.\n2. I combined the ARIMA and SARIMA sections. By checking the ACF and PACF plots, I can determine whether a seasonal component exists, select appropriate orders of terms, and choose the optimal model through model diagnostics.\nHere, we will apply the ARIMA or SARIMA model to our 10 time series datasets in order to make forecasts. Below is a brief introduction to both models, including the parameters p, d, q, P, D, and Q.\nARIMA Model:\nARIMA (AutoRegressive Integrated Moving Average) is used for non-seasonal time series data that exhibit patterns over time. The parameters are:\n- p: The order of the autoregressive (AR) term.\n- d: The degree of differencing to make the series stationary.\n- q: The order of the moving average (MA) term.\nSARIMA Model:\nSARIMA (Seasonal ARIMA) is an extension of the ARIMA model that deals with seasonality in time series data. The additional parameters for seasonal components are:\n- P: The order of the seasonal autoregressive (AR) term.\n- D: The degree of seasonal differencing.\n- Q: The order of the seasonal moving average (MA) term.\n- s: The number of periods in each season.\nData and Model Selection:\nIn the EDA phase, we performed differencing and seasonal differencing to transform the original series into stationary series. The stationarity of the differenced series was validated using the Augmented Dickey-Fuller (ADF) test. Therefore, we can now decide whether to apply the ARIMA or SARIMA model and select the appropriate values for d or D.\nAfter performing the necessary differencing or seasonal differencing, all series have become stationary. We will now present the ACF and PACF plots of these differenced series to determine the optimal values for p (AR model), q (MA model), P (seasonal AR), and Q (seasonal MA).",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#acf-and-pacf-plots",
    "href": "univariate_ts_models.html#acf-and-pacf-plots",
    "title": "Univariate TS Models",
    "section": "ACF and PACF Plots",
    "text": "ACF and PACF Plots\nThe following displays the ACF and PACF plots for the stationary series after differencing.\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(quantmod)\nlibrary(forecast)\nlibrary(astsa)\n\n# Load data\ninvisible(getSymbols(\"DX-Y.NYB\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\"))\ndxy &lt;- data.frame(Date = index(`DX-Y.NYB`), \n                       Open = `DX-Y.NYB`[, \"DX-Y.NYB.Open\"], \n                       High = `DX-Y.NYB`[, \"DX-Y.NYB.High\"], \n                       Low = `DX-Y.NYB`[, \"DX-Y.NYB.Low\"], \n                       Close = `DX-Y.NYB`[, \"DX-Y.NYB.Close\"])\ncolnames(dxy) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\ndxy &lt;- na.omit(dxy)\n\nbea &lt;- read.csv(\"./data/bea.csv\")\nbea$time &lt;- as.Date(bea$time)\n\ngdp &lt;- read.csv(\"./data/gdp.csv\")\ngdp$time &lt;- as.Date(gdp$time)\ngdp$total &lt;- gdp$consumption + gdp$investment + gdp$net_export + gdp$government\n\ndata_unem &lt;- read.csv(\"./data/unem.csv\", header=TRUE)\ndata_unem$time &lt;- as.Date(data_unem$time)\n\ndata_cpi &lt;- read.csv(\"./data/cpi.csv\", header=TRUE)\ndata_cpi$time &lt;- as.Date(data_cpi$time)\n\ninvisible(getSymbols(\"^GSPC\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\"))\ndata &lt;- data.frame(Date = index(GSPC), \n                       Open = GSPC[, \"GSPC.Open\"], \n                       High = GSPC[, \"GSPC.High\"], \n                       Low = GSPC[, \"GSPC.Low\"], \n                       Close = GSPC[, \"GSPC.Close\"])\ncolnames(data) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\nxau &lt;- read.csv(\"./data/xau.csv\")\nxau$Date &lt;- as.Date(xau$Date)\n\ngsci &lt;- read.csv(\"./data/gsci.csv\")\ngsci$Date &lt;- as.Date(gsci$Date)\n\nhouse &lt;- read.csv(\"./data/house.csv\", header=TRUE)\nhouse$time &lt;- as.Date(house$time)\n\nvisitors &lt;- read.csv(\"./data/visitors.csv\", header=TRUE)\nvisitors$time &lt;- as.Date(visitors$time)\n\n# time series\ndxy_ts &lt;- ts(log(dxy$Close), start=c(2005,1), frequency=252)\nbalance_ts &lt;- ts(bea$balance, start=c(2005,1), end=c(2024,3), frequency=4)\ngdp_ts &lt;- ts(gdp$total, start=c(2005,1), end=c(2024,3), frequency=4)\nunem_ts &lt;- ts(log(data_unem$unem), start=c(2005,1), end=c(2023,12), frequency=12)\ncpi_ts &lt;- ts(data_cpi$cpi, start=c(2005,1), end=c(2023,12), frequency=12)\nsp5_ts &lt;- ts(GSPC$GSPC.Close, start=c(2005,1), frequency=252)\nxau_ts &lt;- ts(log(xau$Price), start=c(2005,1), end=c(2024,52), frequency=52)\ngsci_ts &lt;- ts(log(gsci$Price), start=c(2014,252), frequency=252)\nhouse_ts &lt;- ts(house$index, start=c(2005,1), end=c(2024,4), frequency=4)\nvisitors_ts &lt;- ts(log(visitors$count), start=c(2005,1), end=c(2024,12), frequency=12)\n\n\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(gridExtra)\n\nacf &lt;- ggAcf(diff(dxy_ts), 50)+ggtitle(\"ACF Plot for USD Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(dxy_ts), 50)+ggtitle(\"PACF Plot for USD Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(diff(balance_ts, lag=4)))+ggtitle(\"ACF Plot for Trade Balance\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(diff(balance_ts, lag=4)))+ggtitle(\"PACF Plot for Trade Balance\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(gdp_ts))+ggtitle(\"ACF Plot for GDP\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(gdp_ts))+ggtitle(\"PACF Plot for GDP\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(unem_ts))+ggtitle(\"ACF Plot for Unemployment Rate\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(unem_ts))+ggtitle(\"PACF Plot for Unemployment Rate\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(diff(cpi_ts, lag=12)))+ggtitle(\"ACF Plot for CPI\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(diff(cpi_ts, lag=12)))+ggtitle(\"PACF Plot for CPI\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(sp5_ts), 50)+ggtitle(\"ACF Plot for S&P 500 Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(sp5_ts), 50)+ggtitle(\"PACF Plot for S&P 500 Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(xau_ts), 50)+ggtitle(\"ACF Plot for Gold Price\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(xau_ts), 50)+ggtitle(\"PACF Plot for Gold Price\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(gsci_ts), 50)+ggtitle(\"ACF Plot for S&P GSCI Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(gsci_ts), 50)+ggtitle(\"PACF Plot for S&P GSCI Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(house_ts))+ggtitle(\"ACF Plot for House Price Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(house_ts))+ggtitle(\"PACF Plot for House Price Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nacf &lt;- ggAcf(diff(diff(visitors_ts, lag=12)))+ggtitle(\"ACF Plot for Number of International Visitors\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(diff(diff(visitors_ts, lag=12)))+ggtitle(\"PACF Plot for Number of International Visitors\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\n\n\n\nThe ACF plot helps determine the q parameter by identifying the number of significant lags in the moving average (MA) component. The PACF plot helps determine the p parameter by identifying the number of significant lags in the autoregressive (AR) component. For seasonal models, ACF and PACF can also be used to determine the seasonal parameters Q and P.\n\nU.S. Dollar Index: ARIMA model, p=0, d=1, q=0.\n\nTrade Balance: SARIMA model, p=1, d=1, q=1, P=1 or 2，D=1, Q=1, s=4.\n\nGDP: ARIMA model, p=0, d=1, q=0.\n\nUnemployment Rate: ARIMA model, p=0 or 1, d=1, q=0 or 1.\n\nCPI: SARIMA model, p=1 or 2, d=1, q=1 or 2, P=1 or 2, D=1, Q=1 or 2, s=12.\n\nS&P 500: ARIMA model, p=0 or 1 or 4, d=1, q=0:4.\n\nGold Price: ARIMA model, p=0:4, d=1, q=0:4.\n\nGlobal Commodity Price: ARIMA model, p=0:4, d=1, q=0:4.\n\nHouse Price: ARIMA model, p=1 or 3, d=1, q=0:4.\n\nInternational Visitors: SARIMA model, p=1 or 2, d=1, q=1, P=1 or 2, D=1, Q=1, s=12.",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#model-selection-by-manual-search",
    "href": "univariate_ts_models.html#model-selection-by-manual-search",
    "title": "Univariate TS Models",
    "section": "Model Selection by Manual Search",
    "text": "Model Selection by Manual Search\nWrite a function\n\n\nCode\nset.seed(123)\nlibrary(kableExtra)\n\n#write a funtion\nARIMA.c = function(p1, p2, q1, q2, data) {\n  d = 1\n  i = 1\n  temp = data.frame()\n  ls = matrix(rep(NA, 6 * 100), nrow = 100)\n  \n  for (p in p1:p2) {\n    for (q in q1:q2) {\n          if (p + d + q &lt;= 9) {\n            \n            model &lt;- tryCatch({\n              Arima(data, order = c(p, d, q), include.drift = TRUE)\n            }, error = function(e) {\n              return(NULL)\n            })\n            \n            if (!is.null(model)) {\n              ls[i, ] = c(p, d, q, model$aic, model$bic, model$aicc)\n              i = i + 1\n            }\n          }\n        }\n      }\n      temp = as.data.frame(ls)\n      names(temp) = c(\"p\", \"d\", \"q\", \"AIC\", \"BIC\", \"AICc\")\n      temp = na.omit(temp)\n      return(temp)\n}\n\nSARIMA.c = function(p1, p2, q1, q2, P1, P2, Q1, Q2, s, data) {\n  d = 1\n  D = 1\n  i = 1\n  temp = data.frame()\n  ls = matrix(rep(NA, 9 * 100), nrow = 100)\n  \n  for (p in p1:p2) {\n    for (q in q1:q2) {\n      for (P in P1:P2) {\n        for (Q in Q1:Q2) {\n          if (p + d + q + P + D + Q &lt;= 9) {\n            \n            model &lt;- tryCatch({\n              Arima(data, order = c(p, d, q), seasonal = list(order = c(P,D,Q), period = s))\n            }, error = function(e) {\n              return(NULL)\n            })\n            \n            if (!is.null(model)) {\n              ls[i, ] = c(p, d, q, P, D, Q, model$aic, model$bic, model$aicc)\n              i = i + 1\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  temp = as.data.frame(ls)\n  names(temp) = c(\"p\", \"d\", \"q\", \"P\", \"D\", \"Q\", \"AIC\", \"BIC\", \"AICc\")\n  temp = na.omit(temp)\n  return(temp)\n}\n\nhighlight_output = function(output, type=\"ARIMA\") {\n    highlight_row &lt;- c(which.min(output$AIC), which.min(output$BIC), which.min(output$AICc))\n    knitr::kable(output, align = 'c', caption = paste(\"Comparison of\", type, \"Models\")) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(highlight_row, bold = TRUE, background = \"#FFFF99\")  # Highlight row in yellow\n}\n\n\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=3,q1=0,q2=2,data=dxy_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n-39549.01\n-39535.96\n-39549.01\n\n\n0\n1\n1\n-39548.08\n-39528.51\n-39548.08\n\n\n0\n1\n2\n-39546.49\n-39520.39\n-39546.48\n\n\n1\n1\n0\n-39548.06\n-39528.49\n-39548.06\n\n\n1\n1\n1\n-39546.07\n-39519.98\n-39546.06\n\n\n1\n1\n2\n-39544.50\n-39511.87\n-39544.48\n\n\n2\n1\n0\n-39546.53\n-39520.43\n-39546.52\n\n\n2\n1\n1\n-39544.52\n-39511.90\n-39544.51\n\n\n2\n1\n2\n-39542.13\n-39502.98\n-39542.11\n\n\n3\n1\n0\n-39545.35\n-39512.73\n-39545.34\n\n\n3\n1\n1\n-39543.36\n-39504.21\n-39543.34\n\n\n3\n1\n2\n-39541.22\n-39495.55\n-39541.20\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=SARIMA.c(p1=0, p2=1, q1=0, q2=1, P1=0, P2=3, Q1=0, Q2=1, s=4, data=balance_ts)\nhighlight_output(output, type=\"SARIMA\")\n\n\n\nComparison of SARIMA Models\n\n\np\nd\nq\nP\nD\nQ\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n0\n1\n0\n1687.645\n1689.949\n1687.700\n\n\n0\n1\n0\n0\n1\n1\n1643.862\n1648.470\n1644.031\n\n\n0\n1\n0\n1\n1\n0\n1666.255\n1670.863\n1666.424\n\n\n0\n1\n0\n1\n1\n1\n1645.239\n1652.151\n1645.582\n\n\n0\n1\n0\n2\n1\n0\n1658.611\n1665.523\n1658.954\n\n\n0\n1\n0\n2\n1\n1\n1647.203\n1656.419\n1647.783\n\n\n0\n1\n0\n3\n1\n0\n1650.613\n1659.830\n1651.193\n\n\n0\n1\n0\n3\n1\n1\n1649.202\n1660.722\n1650.084\n\n\n0\n1\n1\n0\n1\n0\n1678.825\n1683.434\n1678.994\n\n\n0\n1\n1\n0\n1\n1\n1637.189\n1644.102\n1637.532\n\n\n0\n1\n1\n1\n1\n0\n1656.478\n1663.390\n1656.821\n\n\n0\n1\n1\n1\n1\n1\n1638.874\n1648.090\n1639.453\n\n\n0\n1\n1\n2\n1\n0\n1652.233\n1661.449\n1652.813\n\n\n0\n1\n1\n2\n1\n1\n1640.824\n1652.344\n1641.706\n\n\n0\n1\n1\n3\n1\n0\n1646.400\n1657.920\n1647.282\n\n\n0\n1\n1\n3\n1\n1\n1642.683\n1656.507\n1643.937\n\n\n1\n1\n0\n0\n1\n0\n1680.584\n1685.192\n1680.753\n\n\n1\n1\n0\n0\n1\n1\n1639.372\n1646.284\n1639.715\n\n\n1\n1\n0\n1\n1\n0\n1658.657\n1665.569\n1659.000\n\n\n1\n1\n0\n1\n1\n1\n1641.150\n1650.366\n1641.729\n\n\n1\n1\n0\n2\n1\n0\n1653.976\n1663.192\n1654.556\n\n\n1\n1\n0\n2\n1\n1\n1643.099\n1654.619\n1643.981\n\n\n1\n1\n0\n3\n1\n0\n1648.544\n1660.064\n1649.426\n\n\n1\n1\n0\n3\n1\n1\n1645.038\n1658.863\n1646.292\n\n\n1\n1\n1\n0\n1\n0\n1671.973\n1678.885\n1672.316\n\n\n1\n1\n1\n0\n1\n1\n1638.738\n1647.954\n1639.317\n\n\n1\n1\n1\n1\n1\n0\n1658.386\n1667.602\n1658.966\n\n\n1\n1\n1\n1\n1\n1\n1640.466\n1651.987\n1641.349\n\n\n1\n1\n1\n2\n1\n0\n1653.958\n1665.478\n1654.840\n\n\n1\n1\n1\n2\n1\n1\n1642.453\n1656.277\n1643.707\n\n\n1\n1\n1\n3\n1\n0\n1647.627\n1661.452\n1648.881\n\n\n1\n1\n1\n3\n1\n1\n1644.310\n1660.438\n1646.007\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=3,q1=0,q2=3,data=gdp_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n1134.101\n1138.814\n1134.261\n\n\n0\n1\n1\n1136.067\n1143.137\n1136.391\n\n\n0\n1\n2\n1136.765\n1146.192\n1137.313\n\n\n0\n1\n3\n1137.904\n1149.687\n1138.737\n\n\n1\n1\n0\n1136.058\n1143.128\n1136.382\n\n\n1\n1\n1\n1137.910\n1147.337\n1138.458\n\n\n1\n1\n2\n1136.451\n1148.235\n1137.284\n\n\n1\n1\n3\n1138.449\n1152.589\n1139.632\n\n\n2\n1\n0\n1136.759\n1146.186\n1137.307\n\n\n2\n1\n1\n1136.479\n1148.262\n1137.312\n\n\n2\n1\n2\n1138.450\n1152.590\n1139.633\n\n\n2\n1\n3\n1140.223\n1156.720\n1141.823\n\n\n3\n1\n0\n1137.340\n1149.124\n1138.174\n\n\n3\n1\n1\n1138.434\n1152.575\n1139.618\n\n\n3\n1\n2\n1140.093\n1156.590\n1141.693\n\n\n3\n1\n3\n1141.938\n1160.791\n1144.025\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=3,q1=0,q2=3,data=unem_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n-446.2086\n-439.3587\n-446.1551\n\n\n0\n1\n1\n-448.7059\n-438.4310\n-448.5983\n\n\n0\n1\n2\n-448.6860\n-434.9862\n-448.5058\n\n\n0\n1\n3\n-446.7116\n-429.5868\n-446.4401\n\n\n1\n1\n0\n-447.8811\n-437.6062\n-447.7735\n\n\n1\n1\n1\n-449.1818\n-435.4820\n-449.0016\n\n\n1\n1\n2\n-447.1818\n-430.0570\n-446.9103\n\n\n1\n1\n3\n-445.2603\n-424.7106\n-444.8785\n\n\n2\n1\n0\n-448.1008\n-434.4010\n-447.9206\n\n\n2\n1\n1\n-447.1818\n-430.0571\n-446.9103\n\n\n2\n1\n2\n-448.5442\n-427.9945\n-448.1624\n\n\n2\n1\n3\n-446.6341\n-422.6594\n-446.1227\n\n\n3\n1\n0\n-446.1389\n-429.0141\n-445.8674\n\n\n3\n1\n1\n-445.2760\n-424.7263\n-444.8942\n\n\n3\n1\n2\n-446.6353\n-422.6606\n-446.1239\n\n\n3\n1\n3\n-444.5934\n-417.1938\n-443.9328\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=SARIMA.c(p1=0, p2=2, q1=0, q2=2, P1=0, P2=2, Q1=0, Q2=2, s=12, data=cpi_ts)\nhighlight_output(output, type=\"SARIMA\")\n\n\n\nComparison of SARIMA Models\n\n\np\nd\nq\nP\nD\nQ\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n0\n1\n0\n658.6535\n662.0241\n658.6723\n\n\n0\n1\n0\n0\n1\n1\n564.1015\n570.8427\n564.1581\n\n\n0\n1\n0\n0\n1\n2\n565.4134\n575.5253\n565.5272\n\n\n0\n1\n0\n1\n1\n0\n617.2403\n623.9816\n617.2970\n\n\n0\n1\n0\n1\n1\n1\n565.5610\n575.6729\n565.6747\n\n\n0\n1\n0\n1\n1\n2\n566.7002\n580.1828\n566.8907\n\n\n0\n1\n0\n2\n1\n0\n587.3352\n597.4471\n587.4489\n\n\n0\n1\n0\n2\n1\n1\n565.7886\n579.2712\n565.9791\n\n\n0\n1\n0\n2\n1\n2\n567.7341\n584.5873\n568.0212\n\n\n0\n1\n1\n0\n1\n0\n602.0990\n608.8402\n602.1556\n\n\n0\n1\n1\n0\n1\n1\n496.5890\n506.7009\n496.7028\n\n\n0\n1\n1\n0\n1\n2\n498.5221\n512.0047\n498.7126\n\n\n0\n1\n1\n1\n1\n0\n549.9327\n560.0447\n550.0465\n\n\n0\n1\n1\n1\n1\n1\n498.5327\n512.0153\n498.7232\n\n\n0\n1\n1\n1\n1\n2\n500.5890\n517.4422\n500.8761\n\n\n0\n1\n1\n2\n1\n0\n523.8556\n537.3381\n524.0461\n\n\n0\n1\n1\n2\n1\n1\n499.6569\n516.5101\n499.9440\n\n\n0\n1\n1\n2\n1\n2\n501.2088\n521.4326\n501.6127\n\n\n0\n1\n2\n0\n1\n0\n599.6907\n609.8026\n599.8044\n\n\n0\n1\n2\n0\n1\n1\n494.2850\n507.7675\n494.4755\n\n\n0\n1\n2\n0\n1\n2\n496.2307\n513.0839\n496.5178\n\n\n0\n1\n2\n1\n1\n0\n547.4384\n560.9210\n547.6289\n\n\n0\n1\n2\n1\n1\n1\n496.2386\n513.0918\n496.5257\n\n\n0\n1\n2\n1\n1\n2\n498.2849\n518.5087\n498.6888\n\n\n0\n1\n2\n2\n1\n0\n522.9439\n539.7971\n523.2310\n\n\n0\n1\n2\n2\n1\n1\n497.4835\n517.7073\n497.8873\n\n\n0\n1\n2\n2\n1\n2\n500.2385\n523.8330\n500.7796\n\n\n1\n1\n0\n0\n1\n0\n603.0126\n609.7538\n603.0692\n\n\n1\n1\n0\n0\n1\n1\n496.0501\n506.1620\n496.1639\n\n\n1\n1\n0\n0\n1\n2\n497.9731\n511.4557\n498.1636\n\n\n1\n1\n0\n1\n1\n0\n553.9797\n564.0916\n554.0934\n\n\n1\n1\n0\n1\n1\n1\n497.9887\n511.4713\n498.1792\n\n\n1\n1\n0\n1\n1\n2\n500.0198\n516.8730\n500.3069\n\n\n1\n1\n0\n2\n1\n0\n527.9067\n541.3892\n528.0971\n\n\n1\n1\n0\n2\n1\n1\n498.4834\n515.3365\n498.7704\n\n\n1\n1\n0\n2\n1\n2\n499.8364\n520.0603\n500.2403\n\n\n1\n1\n1\n0\n1\n0\n599.8505\n609.9624\n599.9642\n\n\n1\n1\n1\n0\n1\n1\n493.2341\n506.7166\n493.4245\n\n\n1\n1\n1\n0\n1\n2\n495.1292\n511.9824\n495.4163\n\n\n1\n1\n1\n1\n1\n0\n547.4658\n560.9484\n547.6563\n\n\n1\n1\n1\n1\n1\n1\n495.1458\n511.9990\n495.4329\n\n\n1\n1\n1\n1\n1\n2\n497.2322\n517.4561\n497.6361\n\n\n1\n1\n1\n2\n1\n0\n522.6196\n539.4728\n522.9066\n\n\n1\n1\n1\n2\n1\n1\n496.2410\n516.4649\n496.6449\n\n\n1\n1\n1\n2\n1\n2\n497.8764\n521.4708\n498.4174\n\n\n1\n1\n2\n0\n1\n0\n601.6888\n615.1714\n601.8793\n\n\n1\n1\n2\n0\n1\n1\n489.1427\n505.9959\n489.4298\n\n\n1\n1\n2\n0\n1\n2\n490.3504\n510.5742\n490.7542\n\n\n1\n1\n2\n1\n1\n0\n549.1670\n566.0202\n549.4541\n\n\n1\n1\n2\n1\n1\n1\n490.5057\n510.7295\n490.9096\n\n\n1\n1\n2\n1\n1\n2\n490.7902\n514.3847\n491.3313\n\n\n1\n1\n2\n2\n1\n0\n523.1811\n543.4049\n523.5849\n\n\n1\n1\n2\n2\n1\n1\n490.9600\n514.5545\n491.5011\n\n\n1\n1\n2\n2\n1\n2\n492.1886\n519.1537\n492.8877\n\n\n2\n1\n0\n0\n1\n0\n600.1804\n610.2923\n600.2941\n\n\n2\n1\n0\n0\n1\n1\n495.2469\n508.7294\n495.4374\n\n\n2\n1\n0\n0\n1\n2\n497.1964\n514.0496\n497.4835\n\n\n2\n1\n0\n1\n1\n0\n549.5725\n563.0551\n549.7630\n\n\n2\n1\n0\n1\n1\n1\n497.2053\n514.0585\n497.4924\n\n\n2\n1\n0\n1\n1\n2\n499.2351\n519.4589\n499.6389\n\n\n2\n1\n0\n2\n1\n0\n524.8195\n541.6727\n525.1066\n\n\n2\n1\n0\n2\n1\n1\n498.0705\n518.2943\n498.4743\n\n\n2\n1\n0\n2\n1\n2\n499.6220\n523.2165\n500.1630\n\n\n2\n1\n1\n0\n1\n0\n601.7994\n615.2820\n601.9899\n\n\n2\n1\n1\n0\n1\n1\n494.5859\n511.4391\n494.8730\n\n\n2\n1\n1\n0\n1\n2\n496.3847\n516.6086\n496.7886\n\n\n2\n1\n1\n1\n1\n0\n549.4650\n566.3181\n549.7520\n\n\n2\n1\n1\n1\n1\n1\n496.4203\n516.6442\n496.8242\n\n\n2\n1\n1\n1\n1\n2\n497.5523\n521.1468\n498.0934\n\n\n2\n1\n1\n2\n1\n0\n521.3671\n541.5910\n521.7710\n\n\n2\n1\n1\n2\n1\n1\n497.3314\n520.9259\n497.8725\n\n\n2\n1\n1\n2\n1\n2\n499.8879\n526.8530\n500.5869\n\n\n2\n1\n2\n0\n1\n0\n603.5423\n620.3955\n603.8294\n\n\n2\n1\n2\n0\n1\n1\n490.8666\n511.0904\n491.2705\n\n\n2\n1\n2\n0\n1\n2\n492.1662\n515.7606\n492.7072\n\n\n2\n1\n2\n1\n1\n0\n545.9993\n566.2231\n546.4032\n\n\n2\n1\n2\n1\n1\n1\n498.0507\n521.6452\n498.5918\n\n\n2\n1\n2\n1\n1\n2\n499.5352\n526.5003\n500.2342\n\n\n2\n1\n2\n2\n1\n1\n492.8487\n519.8138\n493.5477\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=4,q1=0,q2=4,data=sp5_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n47962.58\n47975.63\n47962.59\n\n\n0\n1\n1\n47933.67\n47953.24\n47933.67\n\n\n0\n1\n2\n47931.10\n47957.20\n47931.11\n\n\n0\n1\n3\n47930.79\n47963.41\n47930.80\n\n\n0\n1\n4\n47927.88\n47967.02\n47927.89\n\n\n1\n1\n0\n47931.96\n47951.54\n47931.97\n\n\n1\n1\n1\n47930.98\n47957.07\n47930.98\n\n\n1\n1\n2\n47932.40\n47965.02\n47932.41\n\n\n1\n1\n3\n47929.10\n47968.24\n47929.12\n\n\n1\n1\n4\n47929.84\n47975.51\n47929.86\n\n\n2\n1\n0\n47930.68\n47956.77\n47930.69\n\n\n2\n1\n1\n47932.58\n47965.20\n47932.60\n\n\n2\n1\n2\n47932.99\n47972.13\n47933.01\n\n\n2\n1\n3\n47926.33\n47971.99\n47926.35\n\n\n2\n1\n4\n47835.84\n47888.03\n47835.87\n\n\n3\n1\n0\n47932.08\n47964.70\n47932.09\n\n\n3\n1\n1\n47930.16\n47969.30\n47930.18\n\n\n3\n1\n2\n47919.29\n47964.96\n47919.32\n\n\n3\n1\n3\n47838.73\n47890.92\n47838.76\n\n\n3\n1\n4\n47837.02\n47895.73\n47837.06\n\n\n4\n1\n0\n47926.75\n47965.89\n47926.77\n\n\n4\n1\n1\n47928.80\n47974.46\n47928.82\n\n\n4\n1\n2\n47869.65\n47921.84\n47869.68\n\n\n4\n1\n3\n47837.02\n47895.73\n47837.05\n\n\n4\n1\n4\n47821.16\n47886.39\n47821.20\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=4,q1=0,q2=4,data=xau_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n-4855.388\n-4845.496\n-4855.376\n\n\n0\n1\n1\n-4853.402\n-4838.564\n-4853.378\n\n\n0\n1\n2\n-4852.414\n-4832.630\n-4852.375\n\n\n0\n1\n3\n-4851.325\n-4826.595\n-4851.267\n\n\n0\n1\n4\n-4849.898\n-4820.222\n-4849.817\n\n\n1\n1\n0\n-4853.401\n-4838.563\n-4853.378\n\n\n1\n1\n1\n-4851.401\n-4831.617\n-4851.363\n\n\n1\n1\n2\n-4852.944\n-4828.214\n-4852.886\n\n\n1\n1\n3\n-4851.075\n-4821.399\n-4850.994\n\n\n1\n1\n4\n-4849.221\n-4814.599\n-4849.113\n\n\n2\n1\n0\n-4852.379\n-4832.595\n-4852.340\n\n\n2\n1\n1\n-4852.991\n-4828.261\n-4852.933\n\n\n2\n1\n2\n-4850.882\n-4821.206\n-4850.800\n\n\n2\n1\n3\n-4848.999\n-4814.377\n-4848.891\n\n\n2\n1\n4\n-4847.111\n-4807.543\n-4846.971\n\n\n3\n1\n0\n-4851.100\n-4826.370\n-4851.042\n\n\n3\n1\n1\n-4851.130\n-4821.454\n-4851.049\n\n\n3\n1\n2\n-4849.017\n-4814.395\n-4848.908\n\n\n3\n1\n3\n-4846.877\n-4807.309\n-4846.738\n\n\n3\n1\n4\n-4846.797\n-4802.283\n-4846.622\n\n\n4\n1\n0\n-4849.568\n-4819.892\n-4849.487\n\n\n4\n1\n1\n-4849.346\n-4814.724\n-4849.238\n\n\n4\n1\n2\n-4847.200\n-4807.631\n-4847.060\n\n\n4\n1\n3\n-4845.021\n-4800.507\n-4844.846\n\n\n4\n1\n4\n-4851.528\n-4802.068\n-4851.314\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=4,q1=0,q2=4,data=gsci_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n-14332.79\n-14321.12\n-14332.79\n\n\n0\n1\n1\n-14330.80\n-14313.28\n-14330.79\n\n\n0\n1\n2\n-14329.07\n-14305.72\n-14329.05\n\n\n0\n1\n3\n-14327.87\n-14298.68\n-14327.84\n\n\n0\n1\n4\n-14328.89\n-14293.86\n-14328.86\n\n\n1\n1\n0\n-14330.80\n-14313.28\n-14330.79\n\n\n1\n1\n1\n-14328.80\n-14305.44\n-14328.78\n\n\n1\n1\n2\n-14327.07\n-14297.88\n-14327.04\n\n\n1\n1\n3\n-14327.03\n-14292.00\n-14327.00\n\n\n1\n1\n4\n-14326.89\n-14286.03\n-14326.85\n\n\n2\n1\n0\n-14329.09\n-14305.74\n-14329.07\n\n\n2\n1\n1\n-14327.09\n-14297.90\n-14327.06\n\n\n2\n1\n2\n-14325.46\n-14290.43\n-14325.43\n\n\n2\n1\n3\n-14324.10\n-14283.23\n-14324.06\n\n\n2\n1\n4\n-14328.87\n-14282.17\n-14328.82\n\n\n3\n1\n0\n-14327.84\n-14298.65\n-14327.81\n\n\n3\n1\n1\n-14326.78\n-14291.75\n-14326.74\n\n\n3\n1\n2\n-14324.30\n-14283.44\n-14324.26\n\n\n3\n1\n3\n-14328.60\n-14281.90\n-14328.55\n\n\n3\n1\n4\n-14326.07\n-14273.53\n-14326.00\n\n\n4\n1\n0\n-14328.61\n-14293.58\n-14328.58\n\n\n4\n1\n1\n-14326.62\n-14285.76\n-14326.58\n\n\n4\n1\n2\n-14332.55\n-14285.85\n-14332.49\n\n\n4\n1\n3\n-14327.41\n-14274.87\n-14327.34\n\n\n4\n1\n4\n-14325.66\n-14267.29\n-14325.58\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=ARIMA.c(p1=0,p2=4,q1=0,q2=4,data=house_ts)\nhighlight_output(output)\n\n\n\nComparison of ARIMA Models\n\n\np\nd\nq\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n558.5658\n563.3047\n558.7237\n\n\n0\n1\n1\n508.3397\n515.4480\n508.6597\n\n\n0\n1\n2\n495.4612\n504.9390\n496.0017\n\n\n0\n1\n3\n495.5759\n507.4231\n496.3978\n\n\n0\n1\n4\n485.3186\n499.5353\n486.4853\n\n\n1\n1\n0\n509.8531\n516.9614\n510.1731\n\n\n1\n1\n1\n500.2495\n509.7273\n500.7900\n\n\n1\n1\n2\n494.9507\n506.7980\n495.7727\n\n\n1\n1\n3\n496.2475\n510.4642\n497.4142\n\n\n1\n1\n4\n479.3701\n495.9562\n480.9476\n\n\n2\n1\n0\n510.4845\n519.9622\n511.0250\n\n\n2\n1\n1\n502.0996\n513.9468\n502.9215\n\n\n2\n1\n2\n496.7344\n510.9511\n497.9011\n\n\n2\n1\n3\n490.7811\n507.3672\n492.3586\n\n\n2\n1\n4\n479.9493\n498.9049\n482.0064\n\n\n3\n1\n0\n475.3554\n487.2026\n476.1773\n\n\n3\n1\n1\n476.9477\n491.1644\n478.1144\n\n\n3\n1\n2\n474.5879\n491.1740\n476.1654\n\n\n3\n1\n3\n476.5774\n495.5330\n478.6346\n\n\n3\n1\n4\n476.9459\n498.2709\n479.5546\n\n\n4\n1\n0\n476.6184\n490.8351\n477.7851\n\n\n4\n1\n1\n477.7623\n494.3485\n479.3398\n\n\n4\n1\n2\n475.1334\n494.0890\n477.1906\n\n\n4\n1\n3\n476.8984\n498.2234\n479.5071\n\n\n4\n1\n4\n477.7119\n501.4064\n480.9472\n\n\n\n\n\n\n\n\n\n\n\nCode\noutput=SARIMA.c(p1=0, p2=2, q1=0, q2=1, P1=0, P2=3, Q1=0, Q2=1, s=12, data=visitors_ts)\nhighlight_output(output, type=\"SARIMA\")\n\n\n\nComparison of SARIMA Models\n\n\np\nd\nq\nP\nD\nQ\nAIC\nBIC\nAICc\n\n\n\n\n0\n1\n0\n0\n1\n0\n68.6551507\n72.080101\n68.6729284\n\n\n0\n1\n0\n0\n1\n1\n-72.6757187\n-65.825819\n-72.6221472\n\n\n0\n1\n0\n1\n1\n0\n9.7573949\n16.607295\n9.8109663\n\n\n0\n1\n0\n1\n1\n1\n-71.3588664\n-61.084016\n-71.2512430\n\n\n0\n1\n0\n2\n1\n0\n-17.8900301\n-7.615180\n-17.7824068\n\n\n0\n1\n0\n2\n1\n1\n-70.7505577\n-57.050758\n-70.5703775\n\n\n0\n1\n0\n3\n1\n0\n-36.6883524\n-22.988552\n-36.5081722\n\n\n0\n1\n0\n3\n1\n1\n-69.7225221\n-52.597772\n-69.4510289\n\n\n0\n1\n1\n0\n1\n0\n54.9012344\n61.751134\n54.9548058\n\n\n0\n1\n1\n0\n1\n1\n-83.5645818\n-73.289732\n-83.4569584\n\n\n0\n1\n1\n1\n1\n0\n-2.8324692\n7.442381\n-2.7248459\n\n\n0\n1\n1\n1\n1\n1\n-81.9905407\n-68.290741\n-81.8103605\n\n\n0\n1\n1\n2\n1\n0\n-28.4213329\n-14.721533\n-28.2411527\n\n\n0\n1\n1\n2\n1\n1\n-81.2083205\n-64.083570\n-80.9368273\n\n\n0\n1\n1\n3\n1\n0\n-47.8183617\n-30.693612\n-47.5468685\n\n\n0\n1\n1\n3\n1\n1\n-80.7926830\n-60.242983\n-80.4108649\n\n\n1\n1\n0\n0\n1\n0\n58.1846515\n65.034552\n58.2382229\n\n\n1\n1\n0\n0\n1\n1\n-81.6456802\n-71.370830\n-81.5380568\n\n\n1\n1\n0\n1\n1\n0\n-0.3454084\n9.929442\n-0.2377851\n\n\n1\n1\n0\n1\n1\n1\n-80.1803198\n-66.480520\n-80.0001396\n\n\n1\n1\n0\n2\n1\n0\n-26.2734183\n-12.573618\n-26.0932381\n\n\n1\n1\n0\n2\n1\n1\n-79.4269422\n-62.302192\n-79.1554489\n\n\n1\n1\n0\n3\n1\n0\n-45.7336381\n-28.608888\n-45.4621449\n\n\n1\n1\n0\n3\n1\n1\n-78.9179061\n-58.368206\n-78.5360879\n\n\n1\n1\n1\n0\n1\n0\n55.9679375\n66.242788\n56.0755609\n\n\n1\n1\n1\n0\n1\n1\n-81.9368137\n-68.237014\n-81.7566335\n\n\n1\n1\n1\n1\n1\n0\n-1.1721635\n12.527637\n-0.9919833\n\n\n1\n1\n1\n1\n1\n1\n-80.3245462\n-63.199796\n-80.0530530\n\n\n1\n1\n1\n2\n1\n0\n-27.0241890\n-9.899439\n-26.7526958\n\n\n1\n1\n1\n2\n1\n1\n-79.5854119\n-59.035712\n-79.2035938\n\n\n1\n1\n1\n3\n1\n0\n-46.4533041\n-25.903604\n-46.0714859\n\n\n2\n1\n0\n0\n1\n0\n55.3232522\n65.598102\n55.4308755\n\n\n2\n1\n0\n0\n1\n1\n-82.4578205\n-68.758020\n-82.2776403\n\n\n2\n1\n0\n1\n1\n0\n-2.2679220\n11.431878\n-2.0877418\n\n\n2\n1\n0\n1\n1\n1\n-80.8297352\n-63.704985\n-80.5582420\n\n\n2\n1\n0\n2\n1\n0\n-27.5930135\n-10.468263\n-27.3215203\n\n\n2\n1\n0\n2\n1\n1\n-79.9888671\n-59.439167\n-79.6070489\n\n\n2\n1\n0\n3\n1\n0\n-46.8300627\n-26.280363\n-46.4482446\n\n\n2\n1\n0\n3\n1\n1\n-79.5950589\n-55.620409\n-79.0836434\n\n\n2\n1\n1\n0\n1\n0\n57.0632267\n70.763027\n57.2434068\n\n\n2\n1\n1\n0\n1\n1\n-81.3515915\n-64.226841\n-81.0800983\n\n\n2\n1\n1\n1\n1\n0\n-0.8520385\n16.272712\n-0.5805453\n\n\n2\n1\n1\n1\n1\n1\n-79.8469095\n-59.297209\n-79.4650913\n\n\n2\n1\n1\n2\n1\n0\n-26.0638088\n-5.514109\n-25.6819907\n\n\n2\n1\n1\n2\n1\n1\n-77.5805658\n-53.605916\n-77.0691502\n\n\n2\n1\n1\n3\n1\n0\n-45.6030051\n-21.628355\n-45.0915895\n\n\n2\n1\n1\n3\n1\n1\n-78.8231763\n-51.423576\n-78.1626258\n\n\n\n\n\n\n\n\n\n\nBest model for each time series:\n\nU.S. Dollar Index: ARIMA(0,1,0)\n\nTrade Balance: SARIMA(0,1,1)x(0,1,1)[4]\n\nGDP: ARIMA(0,1,0)\n\nUnemployment Rate: ARIMA(0,1,0) or ARIMA(1,1,1)\n\nCPI: SARIMA(1,1,2)x(0,1,1)[12]\n\nS&P 500: ARIMA(4,1,4)\n\nGold Price: ARIMA(0,1,0)\n\nGlobal Commodity Price: ARIMA(0,1,0)\n\nHouse Price: ARIMA(3,1,0) or ARIMA(3,1,2)\n\nInternational Visitors: SARIMA(0,1,1)x(0,1,1)[12]",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#model-selection-by-auto.arima",
    "href": "univariate_ts_models.html#model-selection-by-auto.arima",
    "title": "Univariate TS Models",
    "section": "Model Selection by Auto.arima()",
    "text": "Model Selection by Auto.arima()\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nauto.arima(dxy_ts)\n\n\nSeries: dxy_ts \nARIMA(1,1,0) \n\nCoefficients:\n         ar1\n      0.0146\ns.e.  0.0141\n\nsigma^2 = 2.27e-05:  log likelihood = 19776.68\nAIC=-39549.37   AICc=-39549.37   BIC=-39536.32\n\n\n\n\n\n\nCode\nauto.arima(balance_ts)\n\n\nSeries: balance_ts \nARIMA(1,0,1)(2,1,0)[4] \n\nCoefficients:\n         ar1     ma1     sar1     sar2\n      0.7909  0.4438  -0.6810  -0.2851\ns.e.  0.0815  0.1215   0.1225   0.1257\n\nsigma^2 = 239813097:  log likelihood = -829.6\nAIC=1669.2   AICc=1670.06   BIC=1680.78\n\n\n\n\n\n\nCode\nauto.arima(gdp_ts)\n\n\nSeries: gdp_ts \nARIMA(0,2,1) \n\nCoefficients:\n          ma1\n      -0.9210\ns.e.   0.0442\n\nsigma^2 = 115231:  log likelihood = -558.4\nAIC=1120.8   AICc=1120.97   BIC=1125.49\n\n\n\n\n\n\nCode\nauto.arima(unem_ts)\n\n\nSeries: unem_ts \nARIMA(0,1,1) \n\nCoefficients:\n         ma1\n      0.1553\ns.e.  0.0722\n\nsigma^2 = 0.007935:  log likelihood = 227.33\nAIC=-450.66   AICc=-450.61   BIC=-443.81\n\n\n\n\n\n\nCode\nauto.arima(cpi_ts)\n\n\nSeries: cpi_ts \nARIMA(2,2,3)(1,0,0)[12] \n\nCoefficients:\n          ar1     ar2      ma1      ma2      ma3    sar1\n      -0.0209  0.0458  -0.3448  -0.4849  -0.1413  0.2485\ns.e.   0.7971  0.2766   0.7938   0.5391   0.2840  0.0702\n\nsigma^2 = 0.6156:  log likelihood = -264.23\nAIC=542.46   AICc=542.97   BIC=566.4\n\n\n\n\n\n\nCode\nauto.arima(sp5_ts)\n\n\nError in polyroot(c(1, testvec)) : root finding code failed\n\n\nSeries: sp5_ts \nARIMA(5,2,0) \n\nCoefficients:\n          ar1      ar2      ar3      ar4      ar5\n      -0.8897  -0.6626  -0.4855  -0.3295  -0.1257\ns.e.   0.0140   0.0183   0.0194   0.0183   0.0140\n\nsigma^2 = 959.1:  log likelihood = -24403.24\nAIC=48818.48   AICc=48818.49   BIC=48857.62\n\n\n\n\n\n\nCode\nauto.arima(xau_ts)\n\n\nSeries: xau_ts \nARIMA(0,1,0) with drift \n\nCoefficients:\n       drift\n      0.0018\ns.e.  0.0007\n\nsigma^2 = 0.0005455:  log likelihood = 2429.69\nAIC=-4855.39   AICc=-4855.38   BIC=-4845.5\n\n\n\n\n\n\nCode\nauto.arima(gsci_ts)\n\n\nSeries: gsci_ts \nARIMA(0,1,0)(1,0,0)[252] with drift \n\nCoefficients:\n        sar1  drift\n      0.0073  1e-04\ns.e.  0.0205  3e-04\n\nsigma^2 = 0.000205:  log likelihood = 7168.46\nAIC=-14330.92   AICc=-14330.91   BIC=-14313.41\n\n\n\n\n\n\nCode\nauto.arima(house_ts)\n\n\nSeries: house_ts \nARIMA(2,2,2) \n\nCoefficients:\n          ar1      ar2     ma1     ma2\n      -0.1458  -0.8308  0.1323  0.2815\ns.e.   0.0917   0.0863  0.1590  0.1457\n\nsigma^2 = 21.7:  log likelihood = -229.36\nAIC=468.73   AICc=469.56   BIC=480.51\n\n\n\n\n\n\nCode\nauto.arima(visitors_ts)\n\n\nSeries: visitors_ts \nARIMA(2,0,2)(0,0,2)[12] with non-zero mean \n\nCoefficients:\n         ar1     ar2     ma1     ma2    sma1    sma2     mean\n      0.0223  0.7591  1.0862  0.1426  0.2468  0.1422  15.3529\ns.e.  0.1352  0.1105  0.1549  0.0987  0.0662  0.0583   0.1815\n\nsigma^2 = 0.04477:  log likelihood = 34.24\nAIC=-52.48   AICc=-51.86   BIC=-24.63\n\n\n\n\n\nBest model for each time series:\n\nU.S. Dollar Index: ARIMA(1,1,0)\n\nTrade Balance: SARIMA(1,0,1)(2,1,0)[4]\n\nGDP: ARIMA(0,2,1)\n\nUnemployment Rate: ARIMA(0,1,1)\n\nCPI: SARIMA(2,2,3)(1,0,0)[12]\n\nS&P 500: ARIMA(5,2,0)\n\nGold Price: ARIMA(0,1,0)\n\nGlobal Commodity Price: SARIMA(0,1,0)(1,0,0)[252]\n\nHouse Price: ARIMA(2,2,2)\n\nInternational Visitors: SARIMA(2,0,2)(0,0,2)[12]",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#model-diagnostics",
    "href": "univariate_ts_models.html#model-diagnostics",
    "title": "Univariate TS Models",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\nARIMA(0,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(dxy_ts, 0,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate    SE t.value p.value\nconstant    1e-04 1e-04  0.8257   0.409\n\nsigma^2 estimated as 2.26922e-05 on 5034 degrees of freedom \n \nAIC = -7.854818  AICc = -7.854818  BIC = -7.852226 \n \n\n\nARIMA(1,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(dxy_ts, 1,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nar1        0.0145 0.0141  1.0260  0.3049\nconstant   0.0001 0.0001  0.8118  0.4169\n\nsigma^2 estimated as 2.268745e-05 on 5033 degrees of freedom \n \nAIC = -7.85463  AICc = -7.854629  BIC = -7.850743 \n \n\n\nFor both ARIMA(0,1,0) and ARIMA(1,1,0), the model diagnostics results are very similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, suggesting that the residuals are nearly stationary with a constant mean and finite variance over time.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nThe Ljung-Box Test p-values are below the 0.05 significance level for lags greater than 10, implying that autocorrelations remain in the residuals.\nSince the AR(1) term in the ARIMA(1,1,0) model is not significant at the 10% level, and the ARIMA(0,1,0) model has lower AIC, AICc, and BIC values, we decide to use ARIMA(0,1,0) as the optimal model. Moreover, the intercept term of the ARIMA(0,1,0) is insignificant.\n\n\nSARIMA(0,1,1)x(0,1,1)[4]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(balance_ts, 0,1,1,0,1,1,4))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n     Estimate     SE t.value p.value\nma1    0.3818 0.1180  3.2370  0.0018\nsma1  -1.0000 0.1779 -5.6216  0.0000\n\nsigma^2 estimated as 186141279 on 72 degrees of freedom \n \nAIC = 22.12418  AICc = 22.12647  BIC = 22.21759 \n \n\n\nSARIMA(1,0,1)(2,1,0)[4]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(balance_ts, 1,0,1,2,1,0,4))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n          Estimate        SE t.value p.value\nar1         0.7876    0.0818  9.6289  0.0000\nma1         0.4443    0.1215  3.6567  0.0005\nsar1       -0.6792    0.1224 -5.5499  0.0000\nsar2       -0.2852    0.1254 -2.2749  0.0260\nconstant -726.8264 1479.2954 -0.4913  0.6247\n\nsigma^2 estimated as 226334013 on 70 degrees of freedom \n \nAIC = 22.2794  AICc = 22.29099  BIC = 22.4648 \n \n\n\nFor both SARIMA(0,1,1)x(0,1,1)[4] and SARIMA(1,0,1)(2,1,0)[4], the model diagnostics results are very similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, suggesting that the residuals are nearly stationary with a constant mean and finite variance over time.\nThe Autocorrelation Function (ACF) of the residuals shows perfect independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nThe Ljung-Box Test p-values are all above the 0.05 significance level, implying no autocorrelations are left in the residuals and concluding that the model is well-fitted.\nCoefficient Significance: All model coefficients are significant.\nTherefore, we decide to use SARIMA(0,1,1)x(0,1,1)[4] as the optimal model, since it has lower AIC, AICc, and BIC.\n\n\nARIMA(0,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(gdp_ts, 0,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate      SE t.value p.value\nconstant 212.9192 38.3573  5.5509       0\n\nsigma^2 estimated as 114760 on 77 degrees of freedom \n \nAIC = 14.53976  AICc = 14.54043  BIC = 14.60019 \n \n\n\nARIMA(0,2,1)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(gdp_ts, 0,2,1))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n    Estimate     SE  t.value p.value\nma1   -0.921 0.0442 -20.8594       0\n\nsigma^2 estimated as 113730.5 on 76 degrees of freedom \n \nAIC = 14.5559  AICc = 14.55659  BIC = 14.61677 \n \n\n\nFor both ARIMA(0,1,0) and ARIMA(0,2,1), the model diagnostics results are very similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, but there is a significant oscillation in 2020, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows perfect independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nThe Ljung-Box Test p-values are all above the 0.05 significance level, implying no autocorrelations are left in the residuals and concluding that the model is well-fitted.\nSince the MA(1) term in the ARIMA(0,2,1) model is significant at the 5% level, we decide to use ARIMA(0,2,1) as the optimal model.\n\n\nARIMA(0,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(unem_ts, 0,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate    SE t.value p.value\nconstant  -0.0015 0.006  -0.246  0.8059\n\nsigma^2 estimated as 0.008057314 on 226 degrees of freedom \n \nAIC = -1.965677  AICc = -1.965598  BIC = -1.935501 \n \n\n\nARIMA(1,1,1)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(unem_ts, 1,1,1))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nar1       -0.5485 0.2146 -2.5556  0.0113\nma1        0.6962 0.1832  3.7993  0.0002\nconstant  -0.0014 0.0064 -0.2196  0.8264\n\nsigma^2 estimated as 0.007811542 on 224 degrees of freedom \n \nAIC = -1.978774  AICc = -1.9783  BIC = -1.918423 \n \n\n\nARIMA(0,1,1)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(unem_ts, 0,1,1))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nma1        0.1550 0.0722  2.1459  0.0329\nconstant  -0.0014 0.0068 -0.2091  0.8345\n\nsigma^2 estimated as 0.00789841 on 225 degrees of freedom \n \nAIC = -1.976678  AICc = -1.976442  BIC = -1.931414 \n \n\n\nThe model diagnostics results for all three models are similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, but there is a significant oscillation in 2020, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows perfect independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nHowever, the Ljung-Box test results are different. For the ARIMA(0,1,0) model, the Ljung-Box Test p-values after lag 2 are all above the 0.05 significance level. For the other two models, all p-values are above the threshold. This implies that, for the other two models, no autocorrelations remain in the residuals, concluding that the models are well-fitted.\nCoefficient Significance: All model coefficients are significant.\nSince both the AR(1) and MA(1) terms in the ARIMA(1,1,1) model are significant, we choose this model as the optimal one.\n\n\nSARIMA(1,1,2)x(0,1,1)[12]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(cpi_ts, 1,1,2,0,1,1,12))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n     Estimate     SE t.value p.value\nar1    0.9485 0.0611 15.5239  0.0000\nma1   -0.3778 0.0934 -4.0438  0.0001\nma2   -0.4161 0.0769 -5.4148  0.0000\nsma1  -0.9915 1.1241 -0.8820  0.3788\n\nsigma^2 estimated as 0.4663129 on 211 degrees of freedom \n \nAIC = 2.275082  AICc = 2.275968  BIC = 2.353469 \n \n\n\nSARIMA(2,2,3)(1,0,0)[12]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(cpi_ts, 2,2,3,1,0,0,12))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n     Estimate     SE t.value p.value\nar1   -0.0209 0.7971 -0.0262  0.9791\nar2    0.0458 0.2766  0.1656  0.8686\nma1   -0.3448 0.7938 -0.4343  0.6645\nma2   -0.4849 0.5391 -0.8995  0.3694\nma3   -0.1413 0.2840 -0.4976  0.6193\nsar1   0.2485 0.0702  3.5403  0.0005\n\nsigma^2 estimated as 0.5989571 on 220 degrees of freedom \n \nAIC = 2.400257  AICc = 2.401955  BIC = 2.506203 \n \n\n\nThe model diagnostics results for both models are similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, suggesting that the residuals are nearly stationary with a constant mean and finite variance over time.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nHowever, the Ljung-Box test results and coefficient significance are different. For the SARIMA(1,1,2)x(0,1,1)[12] model, the Ljung-Box Test p-values are all above the 0.05 significance level, and all coefficients are significant. For the SARIMA(2,2,3)(1,0,0)[12] model, the Ljung-Box Test p-values are above the 0.05 significance level only after lag 20, and the majority of the coefficients are not significant.\nTherefore, we choose the SARIMA(1,1,2)x(0,1,1)[12] model as the optimal one.\n\n\nARIMA(4,1,4)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(sp5_ts, 4,1,4))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE  t.value p.value\nar1       -0.2465 0.0268  -9.2149  0.0000\nar2        0.7864 0.0223  35.2752  0.0000\nar3       -0.3998 0.0198 -20.1590  0.0000\nar4       -0.8560 0.0262 -32.6906  0.0000\nma1        0.1942 0.0334   5.8183  0.0000\nma2       -0.7627 0.0273 -27.9744  0.0000\nma3        0.4428 0.0244  18.1189  0.0000\nma4        0.7686 0.0328  23.4248  0.0000\nconstant   0.9567 0.3778   2.5323  0.0114\n\nsigma^2 estimated as 783.1994 on 5022 degrees of freedom \n \nAIC = 9.505299  AICc = 9.505306  BIC = 9.518265 \n \n\n\nARIMA(5,2,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(sp5_ts, 5,2,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n    Estimate     SE  t.value p.value\nar1  -0.8897 0.0140 -63.5255       0\nar2  -0.6626 0.0183 -36.2866       0\nar3  -0.4855 0.0194 -25.0734       0\nar4  -0.3295 0.0183 -18.0316       0\nar5  -0.1257 0.0140  -8.9664       0\n\nsigma^2 estimated as 958.1395 on 5025 degrees of freedom \n \nAIC = 9.705463  AICc = 9.705465  BIC = 9.713244 \n \n\n\nThe model diagnostics results for both models are very similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, But the magnitude of the residuals after 2020 is noticeably larger, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nThe Ljung-Box test results for both models are not satisfactory, as they are below the 0.05 significance level. This indicates that autocorrelations remain in the residuals, concluding that the models need improvement.\nCoefficient Significance: All model coefficients are significant.\nSince the ARIMA(4,1,4) model has lower AIC, AICc and BIC, we choose it as the optimal model.\n\n\nARIMA(0,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(xau_ts, 0,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate    SE t.value p.value\nconstant   0.0018 7e-04  2.4406  0.0148\n\nsigma^2 estimated as 0.0005449249 on 1038 degrees of freedom \n \nAIC = -4.673136  AICc = -4.673132  BIC = -4.663615 \n \n\n\nThis model is chosen by both manual search and auto.arima(). The diagnostic results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, suggesting that the residuals are nearly stationary with a constant mean and finite variance over time.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nThe Ljung-Box Test p-values are all above the 0.05 significance level, implying no autocorrelations are left in the residuals and concluding that the model is well-fitted.\nTherefore, the ARIMA(0,1,0) model is the optimal model.\n\n\nARIMA(0,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(gsci_ts, 0,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate    SE t.value p.value\nconstant    1e-04 3e-04  0.4152   0.678\n\nsigma^2 estimated as 0.0002048122 on 2534 degrees of freedom \n \nAIC = -5.653962  AICc = -5.653961  BIC = -5.649356 \n \n\n\nSARIMA(0,1,0)(1,0,0)[252]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(gsci_ts, 0,1,0,1,0,0,252))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nsar1       0.0073 0.0205  0.3552  0.7225\nconstant   0.0001 0.0003  0.4089  0.6826\n\nsigma^2 estimated as 0.000204801 on 2533 degrees of freedom \n \nAIC = -5.653223  AICc = -5.653221  BIC = -5.646314 \n \n\n\nThe model diagnostics results for both models are similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, but the magnitude of the residuals around 2020 is noticeably larger, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nHowever, the Ljung-Box test results are different. For the ARIMA(0,1,0) model, most of the Ljung-Box Test p-values are all above the 0.05 significance level. For the SARIMA(0,1,0)(1,0,0)[252] model, only p-values after lag 100 are above the threshold. This implies that autocorrelations remain in the residuals for the latter model. Moreover, the seasonal AR(1) term of the model is not significant.\nTherefore, we choose the ARIMA(0,1,0) model as the optimal one.\n\n\nARIMA(3,1,0)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(house_ts, 3,1,0))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nar1        0.8522 0.0873  9.7634  0.0000\nar2       -0.6078 0.1101 -5.5188  0.0000\nar3        0.6153 0.0870  7.0760  0.0000\nconstant   5.5136 3.2681  1.6871  0.0957\n\nsigma^2 estimated as 20.62213 on 75 degrees of freedom \n \nAIC = 6.017157  AICc = 6.023999  BIC = 6.167122 \n \n\n\nARIMA(3,1,2)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(house_ts, 3,1,2))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n         Estimate     SE t.value p.value\nar1        0.7153 0.1199  5.9658  0.0000\nar2       -0.6927 0.1109 -6.2484  0.0000\nar3        0.7350 0.0864  8.5071  0.0000\nma1        0.1982 0.1740  1.1390  0.2584\nma2        0.3248 0.1441  2.2531  0.0273\nconstant   5.3341 2.8926  1.8441  0.0692\n\nsigma^2 estimated as 19.33216 on 73 degrees of freedom \n \nAIC = 6.007442  AICc = 6.02221  BIC = 6.217393 \n \n\n\nARIMA(2,2,2)\n\n\nCode\nmodel_output &lt;- capture.output(sarima(house_ts, 2,2,2))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n    Estimate     SE t.value p.value\nar1  -0.1458 0.0917 -1.5904  0.1160\nar2  -0.8308 0.0863 -9.6271  0.0000\nma1   0.1323 0.1590  0.8321  0.4080\nma2   0.2815 0.1457  1.9323  0.0572\n\nsigma^2 estimated as 20.58715 on 74 degrees of freedom \n \nAIC = 6.009331  AICc = 6.016356  BIC = 6.160402 \n \n\n\nThe model diagnostics results for all three models are similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, but there is a significant oscillation in 2020, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows perfect independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nHowever, the Ljung-Box test results are different. For the ARIMA(3,1,0) model, the Ljung-Box Test p-values after lag 6 are all above the 0.05 significance level. For the other two models, all p-values are above the threshold. This implies that, for the other two models, no autocorrelations remain in the residuals, concluding that the models are well-fitted.\nCoefficient significance: For the ARIMA(3,1,0) model, all three coefficients are significant. For the ARIMA(3,1,2) model, only the coefficient of the MA1 term is insignificant, while all other four are significant. For the ARIMA(2,2,2) model, only the coefficient of the AR2 term is significant, with the other three coefficients insignificant.\nTherefore, we choose the ARIMA(3,1,2) model as the optimal one.\n\n\nSARIMA(0,1,1)x(0,1,1)[12]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(visitors_ts, 0,1,1,0,1,1,12))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n     Estimate     SE  t.value p.value\nma1    0.2515 0.0667   3.7693   2e-04\nsma1  -1.0000 0.0919 -10.8779   0e+00\n\nsigma^2 estimated as 0.03367981 on 225 degrees of freedom \n \nAIC = -0.3681259  AICc = -0.3678899  BIC = -0.3228623 \n \n\n\nSARIMA(2,0,2)(0,0,2)[12]\n\n\nCode\nmodel_output &lt;- capture.output(sarima(visitors_ts, 2,0,2,0,0,2,12))\n\n\n\n\n\n\n\n\n\nCode\nstart_line &lt;- grep(\"Coefficients\", model_output)  # Locate where coefficient details start\nend_line &lt;- length(model_output)  # Last line of output\ncat(model_output[start_line:end_line], sep = \"\\n\")\n\n\nCoefficients: \n      Estimate     SE t.value p.value\nar1     0.0223 0.1352  0.1647  0.8693\nar2     0.7591 0.1105  6.8687  0.0000\nma1     1.0862 0.1549  7.0138  0.0000\nma2     0.1426 0.0987  1.4442  0.1500\nsma1    0.2468 0.0662  3.7273  0.0002\nsma2    0.1422 0.0583  2.4375  0.0155\nxmean  15.3529 0.1815 84.5983  0.0000\n\nsigma^2 estimated as 0.0434599 on 233 degrees of freedom \n \nAIC = -0.2186667  AICc = -0.2166552  BIC = -0.1026454 \n \n\n\nThe model diagnostics results for both models are similar. The results are as follows:\nThe Residual Plot shows nearly consistent fluctuation around zero, but there is a significant oscillation in 2020, indicating the need for a more advanced model to account for special events.\nThe Autocorrelation Function (ACF) of the residuals shows mostly independence.\nThe Q-Q Plot indicates that the residuals follow a near-normal distribution, with minor deviations at the tails, which is typical in time series data.\nHowever, the Ljung-Box test results are different. For the SARIMA(0,1,1)x(0,1,1)[12] model, the Ljung-Box Test p-values are all above the 0.05 significance level. For the SARIMA(2,0,2)(0,0,2)[12] model, all p-values are below the threshold.\nTherefore, we choose the SARIMA(0,1,1)x(0,1,1)[12] model as the optimal model, where all coefficients are significant.\n\n\n\nThe equation of the best model for each time series:\n\nU.S. Dollar Index:\n\nARIMA(0,1,0)\n\\[\n(1-B) x_t= w_t\n\\]\nwhere \\(x_t\\) is the original time series and \\(w_t\\) is the Gaussian white noise process.\n\nTrade Balance:\n\nSARIMA(0,1,1)x(0,1,1)[4] \\[\n\\left(1-B^{4}\\right)(1-B) x_t=\\Theta (B^{4}) \\theta (B) w_t\n\\]\nwhere \\[\n\\begin{align}\n\\Theta(B^4) &= 1 + 0.3818B^{4} \\\\\n\\theta(B) &= 1 -B\n\\end{align}\n\\]\n\nGDP:\n\nARIMA(0,2,1)\n\\[\n(1-B)^2 x_t=\\theta (B) w_t\n\\]\nwhere \\[\n\\theta(B) = 1 -0.921B\n\\]\n\nUnemployment Rate:\n\nARIMA(1,1,1)\n\\[\n\\phi (B) (1-B) x_t=\\theta (B) w_t\n\\]\nwhere \\[\n\\begin{align}\n\\phi (B) &= 1 + 0.5485 B \\\\\n\\theta(B) &= 1 + 0.6962 B\n\\end{align}\n\\]\n\nCPI:\n\nSARIMA(1,1,2)x(0,1,1)[12]\n\\[\n\\phi(B) \\left(1-B^{12}\\right)(1-B) x_t=\\Theta (B^{12}) \\theta (B) w_t\n\\]\nwhere \\[\n\\begin{align}\n\\phi (B) &= 1 -0.9485 B \\\\\n\\Theta(B^{12}) &= 1 - 0.9915 B^{12} \\\\\n\\theta(B) &= 1 -0.3778 B -0.4161 B^{2}\n\\end{align}\n\\]\n\nS&P 500:\n\nARIMA(4,1,4) \\[\n\\phi (B) (1-B) x_t=\\theta (B) w_t + \\mu\n\\]\nwhere \\[\n\\begin{align}\n\\mu &= 0.9567 \\\\\n\\phi (B) &= 1 + 0.2465 B - 0.7864 B^2 + 0.3998 B^3 + 0.8560 B^4\\\\\n\\theta(B) &= 1 + 0.1942 B - 0.7627 B^2 + 0.4428 B^3 + 0.7686 B^4\n\\end{align}\n\\]\n\nGold Price:\n\nARIMA(0,1,0)\n\\[\n(1-B) x_t= w_t + \\mu \\quad \\quad \\quad where \\quad \\mu=0.0018\n\\]\n\nGlobal Commodity Price:\n\nARIMA(0,1,0)\n\\[\n(1-B) x_t= w_t\n\\]\n\nHouse Price:\n\nARIMA(3,1,2) \\[\n\\phi (B) (1-B) x_t=\\theta (B) w_t + \\mu\n\\]\nwhere \\[\n\\begin{align}\n\\mu &= 5.3341 \\\\\n\\phi (B) &= 1 - 0.7153 B + 0.6927 B^2 - 0.7350 B^3 \\\\\n\\theta(B) &= 1 + 0.1982 B + 0.3248 B^2\n\\end{align}\n\\]\n\nInternational Visitors:\n\nSARIMA(0,1,1)x(0,1,1)[12]\n\\[\n\\left(1-B^{12}\\right)(1-B) x_t=\\Theta (B^{12}) \\theta (B) w_t\n\\]\nwhere \\[\n\\begin{align}\n\\Theta(B^{12}) &= 1 - 1.0000 B^{12} \\\\\n\\theta(B) &= 1 + 0.2515 B\n\\end{align}\n\\]",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#forecaseting",
    "href": "univariate_ts_models.html#forecaseting",
    "title": "Univariate TS Models",
    "section": "Forecaseting",
    "text": "Forecaseting\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nfit &lt;- Arima(dxy_ts, order = c(0,1,0), include.drift = TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(0,1,0) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(balance_ts, order = c(0,1,1), seasonal = list(order = c(0,1,1), period = 4))\nforecast_result &lt;- forecast(fit, h = 8)\nautoplot(forecast_result) +\n  labs(title = \"SARIMA(0,1,1)x(0,1,1)[4] Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(gdp_ts, order = c(0,2,1))\nforecast_result &lt;- forecast(fit, h = 12)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(0,2,1) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(unem_ts, order = c(1,1,1))\nforecast_result &lt;- forecast(fit, h = 12)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(1,1,1) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(cpi_ts, order = c(1,1,2), seasonal = list(order = c(0,1,1), period = 12))\nforecast_result &lt;- forecast(fit, h = 36)\nautoplot(forecast_result) +\n  labs(title = \"SARIMA(1,1,2)X(0,1,1)[12] Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(sp5_ts, order = c(4,1,4), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(4,1,4) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(xau_ts, order = c(0,1,0), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 52)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(0,1,0) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(gsci_ts, order = c(0,1,0), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(0,1,0) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(house_ts, order = c(3,1,2))\nforecast_result &lt;- forecast(fit, h = 12)\nautoplot(forecast_result) +\n  labs(title = \"ARIMA(3,1,2) Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(visitors_ts, order = c(0,1,1), seasonal = list(order = c(0,1,1), period = 12))\nforecast_result &lt;- forecast(fit, h = 36)\nautoplot(forecast_result) +\n  labs(title = \"SARIMA(0,1,1)X(0,1,1)[12] Forecast\",\n       x = \"Time\",\n       y = \"Predicted Values\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nThe forecast plots for all series show that our optimal models perform well. The confidence intervals, shown in the shaded blue area, represent the range within which the time series are expected to move. The widening of these intervals as the forecast period extends reflects increasing uncertainty.",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "univariate_ts_models.html#comparison-with-benchmark-methods",
    "href": "univariate_ts_models.html#comparison-with-benchmark-methods",
    "title": "Univariate TS Models",
    "section": "Comparison with Benchmark Methods",
    "text": "Comparison with Benchmark Methods\nWrite a function\n\n\nCode\nplot_forecasts &lt;- function(forecast_result, ts, h, fit) {\n  print(accuracy(forecast_result))  \n  # Plot the forecasts using Mean, Naïve, Drift Methods, and ARIMA Fit\n  autoplot(ts) +\n    autolayer(meanf(ts, h = h), series = \"Mean\", PI = FALSE) +\n    autolayer(naive(ts, h = h), series = \"Naïve\", PI = FALSE) +\n    autolayer(snaive(ts, h = h), series = \"SNaïve\", PI = FALSE) +\n    autolayer(rwf(ts, drift = TRUE, h = h), series = \"Drift\", PI = FALSE) +\n    autolayer(forecast(fit, h = h), series = \"Fit\", PI = FALSE) +\n    xlab(\"Date\") + \n    ylab(\"Predicted Values\") +\n    guides(colour = guide_legend(title = \"Forecast Methods\")) +\n    theme_minimal()\n}\n\n\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nfit &lt;- Arima(dxy_ts, order = c(0,1,0), include.drift = TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nplot_forecasts(forecast_result, dxy_ts, 252, fit)\n\n\n                       ME        RMSE         MAE        MPE       MAPE\nTraining set 8.733295e-07 0.004763563 0.003531088 -5.079e-05 0.07875213\n                   MASE       ACF1\nTraining set 0.05939571 0.01503592\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(balance_ts, order = c(0,1,1), seasonal = list(order = c(0,1,1), period = 4))\nforecast_result &lt;- forecast(fit, h = 8)\nplot_forecasts(forecast_result, balance_ts, 8, fit)\n\n\n                   ME     RMSE      MAE       MPE     MAPE      MASE\nTraining set -747.685 13204.61 9719.848 0.4234581 6.509004 0.4241023\n                    ACF1\nTraining set -0.02798755\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(gdp_ts, order = c(0,2,1))\nforecast_result &lt;- forecast(fit, h = 12)\nplot_forecasts(forecast_result, gdp_ts, 12, fit)\n\n\n                   ME     RMSE      MAE       MPE     MAPE      MASE       ACF1\nTraining set 32.67852 332.9493 147.9156 0.1147268 0.756791 0.1612916 -0.1421698\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(unem_ts, order = c(1,1,1))\nforecast_result &lt;- forecast(fit, h = 12)\nplot_forecasts(forecast_result, unem_ts, 12, fit)\n\n\n                       ME       RMSE        MAE        MPE     MAPE      MASE\nTraining set -0.001293724 0.08819836 0.03253087 -0.1672727 1.841263 0.1628627\n                     ACF1\nTraining set 0.0003963382\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(cpi_ts, order = c(1,1,2), seasonal = list(order = c(0,1,1), period = 12))\nforecast_result &lt;- forecast(fit, h = 36)\nplot_forecasts(forecast_result, cpi_ts, 36, fit)\n\n\n                     ME      RMSE       MAE        MPE      MAPE       MASE\nTraining set 0.01658077 0.6646226 0.4823797 0.00423208 0.2025314 0.07696065\n                   ACF1\nTraining set 0.02124335\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(sp5_ts, order = c(4,1,4), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nplot_forecasts(forecast_result, sp5_ts, 252, fit)\n\n\n                      ME     RMSE      MAE         MPE      MAPE       MASE\nTraining set -0.02174175 27.98292 17.39177 -0.02943003 0.7786464 0.05055928\n                    ACF1\nTraining set -0.01040333\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(xau_ts, order = c(0,1,0), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 52)\nplot_forecasts(forecast_result, xau_ts, 52, fit)\n\n\n                       ME       RMSE        MAE          MPE      MAPE     MASE\nTraining set 5.803826e-06 0.02333315 0.01745149 0.0001973932 0.2473152 0.122605\n                    ACF1\nTraining set 0.003597321\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(gsci_ts, order = c(0,1,0), include.drift=TRUE)\nforecast_result &lt;- forecast(fit, h = 252)\nplot_forecasts(forecast_result, gsci_ts, 252, fit)\n\n\n                       ME       RMSE        MAE          MPE      MAPE\nTraining set 2.379987e-06 0.01430894 0.01014429 -0.000263987 0.1665067\n                   MASE         ACF1\nTraining set 0.05461529 -0.001120247\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(house_ts, order = c(3,1,2))\nforecast_result &lt;- forecast(fit, h = 12)\nplot_forecasts(forecast_result, house_ts, 12, fit)\n\n\n                   ME     RMSE      MAE       MPE      MAPE      MASE\nTraining set 0.520081 4.429123 2.728648 0.1197514 0.6335488 0.1106083\n                    ACF1\nTraining set -0.01834026\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- Arima(visitors_ts, order = c(0,1,1), seasonal = list(order = c(0,1,1), period = 12))\nforecast_result &lt;- forecast(fit, h = 36)\nplot_forecasts(forecast_result, visitors_ts, 36, fit)\n\n\n                        ME     RMSE        MAE         MPE      MAPE      MASE\nTraining set -0.0005064716 0.178516 0.06267839 -0.01008101 0.4338407 0.2188027\n                    ACF1\nTraining set -0.00867727\n\n\n\n\n\n\n\n\n\n\n\n\nOur models generally outperform the benchmark methods, although sometimes the Naïve method better predicts seasonality. By comparing the forecast results of our model with those benchmark methods, it is clear that our model offers more precise and reliable predictions. The accuracy metrics (ME, RMSE, MAE, MPE, MAPE, MASE, ACF1) further confirm the superiority of our model, making it the optimal choice for forecasting in this case.",
    "crumbs": [
      "Univariate TS Models (ARIMA/SARIMA)"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time Series",
    "section": "",
    "text": "What is a Time Series ?\n\nAny metric that is measured over regular time intervals makes a Time Series. A time series is a sequence of data points or observations collected or recorded over a period of time at specific, equally spaced intervals. Each data point in a time series is associated with a particular timestamp or time period, making it possible to analyze and study how a particular variable or phenomenon changes over time. Time series data can be found in various domains and can represent a wide range of phenomena, including financial data, economic indicators, weather measurements, stock prices, sales figures, and more.\n\nExample: Weather data, Stock prices, Industry forecasts, etc are some of the common ones.\n\nThe analysis of experimental data that have been observed at different points in time leads to new and unique problems in statistical modeling and inference.\nThe obvious correlation introduced by the sampling of adjacent points in time can severely restrict the applicability of the many conventional statistical methods traditionally dependent on the assumption that these adjacent observations are independent and identically distributed.\n\nKey characteristics of time series data include:\nTemporal Order: Time series data is ordered chronologically, with each data point representing an observation at a specific point in time. The order of data points is critical for understanding trends and patterns over time.\nEqually Spaced Intervals: In most cases, time series data is collected at regular intervals, such as hourly, daily, weekly, monthly, or yearly. However, irregularly spaced time series data can also exist.\nDependency: Time series data often exhibits temporal dependency, meaning that the value at a given time is influenced by or related to the values at previous times. This dependency can take various forms, including trends, seasonality. This serial correlation is called as autocorrelation.\nComponents: Time series data can typically be decomposed into various components, including:\nTrend: The long-term movement or direction in the data.\nSeasonality: Repeating patterns or cycles that occur at fixed intervals.\nNoise/Irregularity: Random fluctuations or variability in the data that cannot be attributed to the trend or seasonality.\nApplications: Time series data is widely used for various applications, including forecasting future values, identifying patterns and anomalies, understanding underlying trends, and making informed decisions based on historical data.\nAnalyzing time series data involves techniques like time series decomposition, smoothing, statistical modeling, and forecasting. This class will cover but not be limited to traditional time series modeling including ARIMA, SARIMA, the multivariate Time Series modeling including; ARIMAX, SARIMAX, and VAR models, Financial Time Series modeling including; ARCH, GARCH models, and E-GARCH, M-GARCH..ect, Bayesian structural time series (BSTS) models, Spectral Analysis and Deep Learning Techniques for Time Series. Researchers and analysts use software tools like Python, R, and specialized time series libraries to work with and analyze time series data effectively.\nTime series analysis is essential in fields such as finance, economics, epidemiology, environmental science, engineering, and many others, as it provides insights into how variables change over time and allows for the development of predictive models to forecast future trends and outcomes.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "U.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(quantmod)\n\ninvisible(getSymbols(\"DX-Y.NYB\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\"))\ndxy &lt;- data.frame(Date = index(`DX-Y.NYB`), \n                       Open = `DX-Y.NYB`[, \"DX-Y.NYB.Open\"], \n                       High = `DX-Y.NYB`[, \"DX-Y.NYB.High\"], \n                       Low = `DX-Y.NYB`[, \"DX-Y.NYB.Low\"], \n                       Close = `DX-Y.NYB`[, \"DX-Y.NYB.Close\"])\ndxy &lt;- na.omit(dxy)\ncolnames(dxy) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\ngg &lt;- ggplot(data = dxy, aes(x = Date, y = Close)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", title = \"Trend of U.S. Dollar Index\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of the U.S. Dollar Index reveals a general upward trend, indicating that the value of the U.S. Dollar has been appreciating over time. Despite the presence of trend and weak seasonal patterns, the data does not show clear periodic fluctuations across different years. Based on the observation, I preliminarily consider that the U.S. Dollar Index may follow a multiplicative model. This approach may better capture the dynamic nature of the index’s fluctuations.\n\n\n\n\nCode\nbea &lt;- read.csv(\"./data/bea.csv\")\nbea$time &lt;- as.Date(bea$time)\n\ngg &lt;- ggplot(bea) + \n  geom_line(aes(x = time, y = balance/1000), color = \"purple\") +\n  labs(x = \"Year\", y = \"Billions of Dollars\", \n  title = \"Trends of Trade Balance\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of the trade balance shows a strong seasonality, with July being the lowest month each year and January being the highest. This pattern may be due to factors such as seasonal fluctuations in demand and supply, where imports tend to increase during the holiday season in December, leading to a higher trade deficit in January. On the other hand, July may see a dip in trade activity due to summer holidays, reduced production, and lower consumer demand.\n\n\n\n\nCode\ngdp &lt;- read.csv(\"./data/gdp.csv\")\ngdp$time &lt;- as.Date(gdp$time)\ngdp$total &lt;- gdp$consumption + gdp$investment + gdp$net_export + gdp$government\ngg &lt;- ggplot(data = gdp, aes(x = time, y = total)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Billions of Dollars\", title = \"GDP Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of GDP shows a steady increasing trend. Since the raw data we extracted from the BEA is seasonally adjusted at annual rates, there is no noticeable seasonality in the data. Given this, I preliminarily consider the time series to follow an additive model, where the trend is consistent over time and the variations are not influenced by seasonal patterns. This additive model helps capture the general growth trajectory without the need for seasonal adjustments.\n\n\n\n\nCode\ndata_unem &lt;- read.csv(\"./data/unem.csv\", header=TRUE)\ndata_unem$time &lt;- as.Date(data_unem$time)\ngg &lt;- ggplot(data = data_unem, aes(x = time, y = unem)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Rate\", title = \"U.S. Unemployment Rate Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe unemployment rate shows a significant increase over time, indicating both an upward trend and noticeable seasonality. Given the siginificant trend and potential skewness in the data, it may be beneficial to apply a log-transformation for further analysis. This transformation can help stabilize the variance, reduce the impact of extreme values, and make the data more suitable for modeling, particularly when examining long-term trends or conducting forecasting tasks.\n\n\n\n\nCode\ndata_cpi &lt;- read.csv(\"./data/cpi.csv\", header=TRUE)\ndata_cpi$time &lt;- as.Date(data_cpi$time)\ngg &lt;- ggplot(data = data_cpi, aes(x = time, y = cpi)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"U.S. CPI Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe Consumer Price Index (CPI) also exhibits an upward trend, reflecting the general increase in the cost of living over time. In addition to the trend, there is clear seasonality, with periodic fluctuations occurring at regular intervals throughout the year. Given the consistent nature of these variations, I preliminarily consider the CPI to follow an additive model, where the fluctuations are constant across all levels of the trend. This approach assumes that the seasonal effects do not vary in magnitude as the overall index value changes, making it suitable for capturing the patterns of inflation within the data.\n\n\n\n\nCode\ngetSymbols(\"^GSPC\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\") \n\n\n[1] \"GSPC\"\n\n\nCode\ndata &lt;- data.frame(Date = index(GSPC), \n                       Open = GSPC[, \"GSPC.Open\"], \n                       High = GSPC[, \"GSPC.High\"], \n                       Low = GSPC[, \"GSPC.Low\"], \n                       Close = GSPC[, \"GSPC.Close\"])\ncolnames(data) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\ngg &lt;- ggplot(data = data, aes(x = Date, y = Close)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"S&P 500 Index Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe S&P 500 index displays a clear overall upward trend, reflecting the long-term growth of the stock market. However, like some other financial indicators, it does not show clear seasonality or periodic fluctuations across years. The lack of consistent cyclical patterns suggests that the S&P 500 index may not be significantly influenced by regular seasonal effects. Given this, I preliminarily consider the S&P 500 index to follow an additive model. This model allows for capturing the general market growth while assuming that the variations in the index are not driven by seasonal or periodic factors.\n\n\n\n\nCode\nxau &lt;- read.csv(\"./data/xau.csv\")\nxau$Date &lt;- as.Date(xau$Date)\ngg &lt;- ggplot(data = xau, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"Spot Gold in US Dollar\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot of spot gold prices shows a clear upward trend, reflecting the long-term increase in gold prices. In addition to the overall trend, there is noticeable annual seasonality, indicating that gold prices exhibit periodic fluctuations that repeat each year. Given that the magnitude of the fluctuations appears to vary depending on the level of the trend, I preliminarily consider the gold price data to follow a multiplicative model.\n\n\n\n\nCode\ngsci &lt;- read.csv(\"./data/gsci.csv\")\ngsci$Date &lt;- as.Date(gsci$Date)\ngg &lt;- ggplot(data = gsci, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"S&P GSCI Index (USD) Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot of GSCI Global Commidity Price Index shows a clear trend, reflecting the long-term changes in commidity prices. In addition to the overall trend, there is noticeable annual seasonality, indicating that commodity prices exhibit periodic fluctuations that repeat each year. Given that the magnitude of the fluctuations appears to vary depending on the level of the trend, I preliminarily consider the index to follow a multiplicative model.\n\n\n\n\nCode\nhouse &lt;- read.csv(\"./data/house.csv\", header=TRUE)\nhouse$time &lt;- as.Date(house$time)\n\ngg &lt;- ggplot(data = house, aes(x = time, y = index)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"House Price Index Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe House Price Index shows a clear overall upward trend, indicating that home prices have generally been rising over time. However, unlike some other economic indicators, the data does not exhibit clearly periodic fluctuations across years, suggesting that seasonal patterns or cyclical variations are not prominent. The plot appears to be very smooth, with minimal volatility, reflecting a stable growth pattern. Given this, I preliminarily consider the House Price Index to follow a additive model.\n\n\n\n\nCode\nvisitors &lt;- read.csv(\"./data/visitors.csv\", header=TRUE)\nvisitors$time &lt;- as.Date(visitors$time)\n\ngg &lt;- ggplot(data = visitors, aes(x = time, y = count)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Number of Visitors\", title = \"Non-U.S. Resident Visitor Arrivals to the U.S.\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe data on visitor arrivals to the United States shows a clear seasonal pattern, with noticeable peaks and troughs occurring at regular intervals throughout the year. From 2005 to 2020, there is a stable, gradual increase in the number of visitors, suggesting steady growth over time. Given the consistent nature of the seasonal fluctuations and the overall steady increase, I preliminarily consider the data to follow an additive model. This model assumes that the seasonal variations remain constant across different levels of the overall trend, meaning that the same seasonal effect is added to the trend, regardless of the time period.\n\n\n\nBased on the time series plots above, we apply log transformation to the following variables: USD Index, Unemployment Rate, Gold Price, Global Commodity Price, and Number of International Visitors. This transformation is used to stabilize variance, reduce skewness, and better model the growth patterns in these variables. Taking the logarithm helps to linearize exponential growth trends, especially for variables like Unemployment Rate and Gold Price, which exhibit high volatility or nonlinear behavior.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#time-series-plot",
    "href": "eda.html#time-series-plot",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "U.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(quantmod)\n\ninvisible(getSymbols(\"DX-Y.NYB\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\"))\ndxy &lt;- data.frame(Date = index(`DX-Y.NYB`), \n                       Open = `DX-Y.NYB`[, \"DX-Y.NYB.Open\"], \n                       High = `DX-Y.NYB`[, \"DX-Y.NYB.High\"], \n                       Low = `DX-Y.NYB`[, \"DX-Y.NYB.Low\"], \n                       Close = `DX-Y.NYB`[, \"DX-Y.NYB.Close\"])\ndxy &lt;- na.omit(dxy)\ncolnames(dxy) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\ngg &lt;- ggplot(data = dxy, aes(x = Date, y = Close)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", title = \"Trend of U.S. Dollar Index\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of the U.S. Dollar Index reveals a general upward trend, indicating that the value of the U.S. Dollar has been appreciating over time. Despite the presence of trend and weak seasonal patterns, the data does not show clear periodic fluctuations across different years. Based on the observation, I preliminarily consider that the U.S. Dollar Index may follow a multiplicative model. This approach may better capture the dynamic nature of the index’s fluctuations.\n\n\n\n\nCode\nbea &lt;- read.csv(\"./data/bea.csv\")\nbea$time &lt;- as.Date(bea$time)\n\ngg &lt;- ggplot(bea) + \n  geom_line(aes(x = time, y = balance/1000), color = \"purple\") +\n  labs(x = \"Year\", y = \"Billions of Dollars\", \n  title = \"Trends of Trade Balance\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of the trade balance shows a strong seasonality, with July being the lowest month each year and January being the highest. This pattern may be due to factors such as seasonal fluctuations in demand and supply, where imports tend to increase during the holiday season in December, leading to a higher trade deficit in January. On the other hand, July may see a dip in trade activity due to summer holidays, reduced production, and lower consumer demand.\n\n\n\n\nCode\ngdp &lt;- read.csv(\"./data/gdp.csv\")\ngdp$time &lt;- as.Date(gdp$time)\ngdp$total &lt;- gdp$consumption + gdp$investment + gdp$net_export + gdp$government\ngg &lt;- ggplot(data = gdp, aes(x = time, y = total)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Billions of Dollars\", title = \"GDP Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe time series plot of GDP shows a steady increasing trend. Since the raw data we extracted from the BEA is seasonally adjusted at annual rates, there is no noticeable seasonality in the data. Given this, I preliminarily consider the time series to follow an additive model, where the trend is consistent over time and the variations are not influenced by seasonal patterns. This additive model helps capture the general growth trajectory without the need for seasonal adjustments.\n\n\n\n\nCode\ndata_unem &lt;- read.csv(\"./data/unem.csv\", header=TRUE)\ndata_unem$time &lt;- as.Date(data_unem$time)\ngg &lt;- ggplot(data = data_unem, aes(x = time, y = unem)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Rate\", title = \"U.S. Unemployment Rate Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe unemployment rate shows a significant increase over time, indicating both an upward trend and noticeable seasonality. Given the siginificant trend and potential skewness in the data, it may be beneficial to apply a log-transformation for further analysis. This transformation can help stabilize the variance, reduce the impact of extreme values, and make the data more suitable for modeling, particularly when examining long-term trends or conducting forecasting tasks.\n\n\n\n\nCode\ndata_cpi &lt;- read.csv(\"./data/cpi.csv\", header=TRUE)\ndata_cpi$time &lt;- as.Date(data_cpi$time)\ngg &lt;- ggplot(data = data_cpi, aes(x = time, y = cpi)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"U.S. CPI Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe Consumer Price Index (CPI) also exhibits an upward trend, reflecting the general increase in the cost of living over time. In addition to the trend, there is clear seasonality, with periodic fluctuations occurring at regular intervals throughout the year. Given the consistent nature of these variations, I preliminarily consider the CPI to follow an additive model, where the fluctuations are constant across all levels of the trend. This approach assumes that the seasonal effects do not vary in magnitude as the overall index value changes, making it suitable for capturing the patterns of inflation within the data.\n\n\n\n\nCode\ngetSymbols(\"^GSPC\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\") \n\n\n[1] \"GSPC\"\n\n\nCode\ndata &lt;- data.frame(Date = index(GSPC), \n                       Open = GSPC[, \"GSPC.Open\"], \n                       High = GSPC[, \"GSPC.High\"], \n                       Low = GSPC[, \"GSPC.Low\"], \n                       Close = GSPC[, \"GSPC.Close\"])\ncolnames(data) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\ngg &lt;- ggplot(data = data, aes(x = Date, y = Close)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"S&P 500 Index Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe S&P 500 index displays a clear overall upward trend, reflecting the long-term growth of the stock market. However, like some other financial indicators, it does not show clear seasonality or periodic fluctuations across years. The lack of consistent cyclical patterns suggests that the S&P 500 index may not be significantly influenced by regular seasonal effects. Given this, I preliminarily consider the S&P 500 index to follow an additive model. This model allows for capturing the general market growth while assuming that the variations in the index are not driven by seasonal or periodic factors.\n\n\n\n\nCode\nxau &lt;- read.csv(\"./data/xau.csv\")\nxau$Date &lt;- as.Date(xau$Date)\ngg &lt;- ggplot(data = xau, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"Spot Gold in US Dollar\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot of spot gold prices shows a clear upward trend, reflecting the long-term increase in gold prices. In addition to the overall trend, there is noticeable annual seasonality, indicating that gold prices exhibit periodic fluctuations that repeat each year. Given that the magnitude of the fluctuations appears to vary depending on the level of the trend, I preliminarily consider the gold price data to follow a multiplicative model.\n\n\n\n\nCode\ngsci &lt;- read.csv(\"./data/gsci.csv\")\ngsci$Date &lt;- as.Date(gsci$Date)\ngg &lt;- ggplot(data = gsci, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"S&P GSCI Index (USD) Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot of GSCI Global Commidity Price Index shows a clear trend, reflecting the long-term changes in commidity prices. In addition to the overall trend, there is noticeable annual seasonality, indicating that commodity prices exhibit periodic fluctuations that repeat each year. Given that the magnitude of the fluctuations appears to vary depending on the level of the trend, I preliminarily consider the index to follow a multiplicative model.\n\n\n\n\nCode\nhouse &lt;- read.csv(\"./data/house.csv\", header=TRUE)\nhouse$time &lt;- as.Date(house$time)\n\ngg &lt;- ggplot(data = house, aes(x = time, y = index)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"House Price Index Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe House Price Index shows a clear overall upward trend, indicating that home prices have generally been rising over time. However, unlike some other economic indicators, the data does not exhibit clearly periodic fluctuations across years, suggesting that seasonal patterns or cyclical variations are not prominent. The plot appears to be very smooth, with minimal volatility, reflecting a stable growth pattern. Given this, I preliminarily consider the House Price Index to follow a additive model.\n\n\n\n\nCode\nvisitors &lt;- read.csv(\"./data/visitors.csv\", header=TRUE)\nvisitors$time &lt;- as.Date(visitors$time)\n\ngg &lt;- ggplot(data = visitors, aes(x = time, y = count)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Number of Visitors\", title = \"Non-U.S. Resident Visitor Arrivals to the U.S.\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe data on visitor arrivals to the United States shows a clear seasonal pattern, with noticeable peaks and troughs occurring at regular intervals throughout the year. From 2005 to 2020, there is a stable, gradual increase in the number of visitors, suggesting steady growth over time. Given the consistent nature of the seasonal fluctuations and the overall steady increase, I preliminarily consider the data to follow an additive model. This model assumes that the seasonal variations remain constant across different levels of the overall trend, meaning that the same seasonal effect is added to the trend, regardless of the time period.\n\n\n\nBased on the time series plots above, we apply log transformation to the following variables: USD Index, Unemployment Rate, Gold Price, Global Commodity Price, and Number of International Visitors. This transformation is used to stabilize variance, reduce skewness, and better model the growth patterns in these variables. Taking the logarithm helps to linearize exponential growth trends, especially for variables like Unemployment Rate and Gold Price, which exhibit high volatility or nonlinear behavior.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#lag-plot",
    "href": "eda.html#lag-plot",
    "title": "Exploratory Data Analysis",
    "section": "2. Lag plot",
    "text": "2. Lag plot\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(forecast)\n\ndxy_ts &lt;- ts(log(dxy$Close), start=c(2005,1), frequency=252)\nbalance_ts &lt;- ts(bea$balance, start=c(2005,1), end=c(2024,3), frequency=4)\ngdp_ts &lt;- ts(gdp$total, start=c(2005,1), end=c(2024,3), frequency=4)\nunem_ts &lt;- ts(log(data_unem$unem), start=c(2005,1), end=c(2023,12), frequency=12)\ncpi_ts &lt;- ts(data_cpi$cpi, start=c(2005,1), end=c(2023,12), frequency=12)\nsp5_ts &lt;- ts(GSPC$GSPC.Close, start=c(2005,1), frequency=252)\nxau_ts &lt;- ts(log(xau$Price), start=c(2005,1), end=c(2024,52), frequency=52)\ngsci_ts &lt;- ts(log(gsci$Price), start=c(2014,252), frequency=252)\nhouse_ts &lt;- ts(house$index, start=c(2005,1), end=c(2024,4), frequency=4)\nvisitors_ts &lt;- ts(log(visitors$count), start=c(2005,1), end=c(2024,12), frequency=12)\n\ngglagplot(dxy_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"USD Index\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nFrom the lag plot, we can observe that the U.S. Dollar Index exhibits a strong positive autocorrelation, indicating that past values are highly correlated with future values. Even at lag 16, the autocorrelation remains high, suggesting that the influence of previous data points continues to affect current values over an extended period. This persistence indicates that the U.S. Dollar Index follows a sustained trend, with momentum carrying forward from one period to the next. Such behavior is typical in financial time series, where long-term trends can be heavily influenced by past performance, reinforcing the continuation of the observed pattern.\n\n\n\n\nCode\ngglagplot(balance_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Balance\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the trade balance shows that the points for the first three lags are tightly aligned along the 45-degree diagonal, indicating strong positive autocorrelation. Starting from lag 4, the points gradually disperse, suggesting that the impact of past values weakens over time. Additionally, the clustering of points in the first lag (quarterly) indicates seasonality, with certain quarters showing similar trade balance patterns.\n\n\n\n\nCode\ngglagplot(gdp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"GDP\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nFrom the lag plot, we can see that the GDP data shows perfect positive autocorrelation in the first three lags, which gradually weakens as the lags increase. Additionally, data points from different quarters are clustered together, indicating that there is no clear seasonal pattern in the serial correlation. This suggests that while past values have a strong influence on future values in the short term, the impact diminishes over time.\n\n\n\n\nCode\ngglagplot(unem_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Unem Rate\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nFrom the lag plot, we can see that the GDP data shows strong positive autocorrelation in the first three lags, which gradually weakens as the lags increase. Additionally, data points from different quarters are clustered together, indicating that there is no clear seasonal pattern in the serial correlation. This suggests that while past values have a strong influence on future values in the short term, the impact diminishes over time.\n\n\n\n\nCode\ngglagplot(cpi_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"CPI\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the CPI data shows perfect positive autocorrelation for the first 7 lags, indicating a strong relationship between past and current values. Even at lag 16, the autocorrelation remains relatively high, suggesting that the influence of past values persists over a longer period. This indicates a sustained trend in the CPI data, where previous values continue to have a notable impact on future values.\n\n\n\n\nCode\ngglagplot(sp5_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Index\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the S&P 500 index shows perfect positive autocorrelation up to lag 16, indicating that past values are strongly correlated with future values over an extended period. Financial data, like the S&P 500, often exhibit such behavior due to the presence of a unit root, which implies that the time series is non-stationary and tends to follow a random walk. As a result, financial data generally shows long-lasting autocorrelation, where shocks or changes in the data persist over time.\n\n\n\n\nCode\ngglagplot(xau_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Gold Price\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the Spot Gold Price shows perfect positive autocorrelation up to lag 16, indicating that past values are strongly correlated with future values over an extended period. Financial data often exhibit such behavior due to the presence of a unit root, which implies that the time series is non-stationary and tends to follow a random walk. As a result, financial data generally shows long-lasting autocorrelation, where shocks or changes in the data persist over time.\n\n\n\n\nCode\ngglagplot(gsci_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"S&P GSCI Index\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the S&P GSCI Index shows perfect positive autocorrelation up to lag 16, indicating that past values are strongly correlated with future values over an extended period. Financial data often exhibit such behavior due to the presence of a unit root, which implies that the time series is non-stationary and tends to follow a random walk. As a result, financial data generally shows long-lasting autocorrelation, where shocks or changes in the data persist over time.\n\n\n\n\nCode\ngglagplot(house_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"House Price\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the House Price Index shows perfect positive autocorrelation at lag 1, indicating a strong influence of the previous period on the current value. However, as the lags increase, the autocorrelation gradually weakens, suggesting that the impact of past values diminishes over time. This means that short-term trends in house prices are closely linked to previous values, but the relationship becomes weaker as time moves forward.\n\n\n\n\nCode\ngglagplot(visitors_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Number of Visitors\") +\n          theme(axis.text.x=element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\n\n\nThe lag plot of the number of international visitors shows strong autocorrelation in the first four lags, but this correlation gradually weakens as the lags increase. Monthly seasonality is not very noticeable in the plot, possibly because the points are clustered together, making it harder to detect clear seasonal patterns. This suggests that while past values influence the current data for the short term, the effect diminishes over time.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#decomposition",
    "href": "eda.html#decomposition",
    "title": "Exploratory Data Analysis",
    "section": "3. Decomposition",
    "text": "3. Decomposition\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\ndecomposed &lt;- decompose(dxy_ts)\nautoplot(decomposed, main = \"Decomposition Plot for U.S. Dollar Index\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(balance_ts)\nautoplot(decomposed, main = \"Decomposition Plot for Trade Balance\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(gdp_ts)\nautoplot(decomposed, main = \"Decomposition Plot for GDP\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(unem_ts)\nautoplot(decomposed, main = \"Decomposition Plot for Unemployment Rate\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(cpi_ts)\nautoplot(decomposed, main = \"Decomposition Plot for CPI\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(sp5_ts)\nautoplot(decomposed, main = \"Decomposition Plot for S&P 500 Index\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(xau_ts)\nautoplot(decomposed, main = \"Decomposition Plot for Gold Price\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(gsci_ts)\nautoplot(decomposed, main = \"Decomposition Plot for S&P GSCI Index\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(house_ts)\nautoplot(decomposed, main = \"Decomposition Plot for House Price Index\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecomposed &lt;- decompose(visitors_ts)\nautoplot(decomposed, main = \"Decomposition Plot for Number of Visitors\")\n\n\n\n\n\n\n\n\n\n\n\n\nFor all of the data series, these decomposition plots generally align with the conclusions we discussed earlier. They confirm the observed trends, seasonality, and the diminishing impact of past values over time. The decompositions help to visualize the underlying components of each series, such as the trend, seasonality, and residuals, further supporting our initial analysis of the data patterns.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#acf-and-pacf-plots",
    "href": "eda.html#acf-and-pacf-plots",
    "title": "Exploratory Data Analysis",
    "section": "4. ACF and PACF Plots",
    "text": "4. ACF and PACF Plots\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(gridExtra)\n\nacf &lt;- ggAcf(dxy_ts)+ggtitle(\"ACF Plot for USD Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(dxy_ts)+ggtitle(\"PACF Plot for USD Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot for the USD Index shows a very slow decay over time, indicating that the autocorrelation remains high across many lags. The PACF plot, on the other hand, shows a significant value only at lag 1, with the values rapidly approaching zero after that. This suggests that the U.S. Dollar Index time series is non-stationary, likely exhibiting a unit root. Such behavior is typical for financial data, where past values have a lasting influence on future values, reflecting the persistent nature of trends in these types of series.\n\n\n\n\nCode\nacf &lt;- ggAcf(balance_ts)+ggtitle(\"ACF Plot for Trade Balance\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(balance_ts)+ggtitle(\"PACF Plot for Trade Balance\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot for the trade balance shows significant autocorrelation even at lag 12, indicating a long-lasting influence. The PACF plot reveals significant values at lags 1, 3, and 7, suggesting partial relationships at these specific lags.\n\n\n\n\nCode\nacf &lt;- ggAcf(gdp_ts)+ggtitle(\"ACF Plot for GDP\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(gdp_ts)+ggtitle(\"PACF Plot for GDP\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the GDP time series is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(unem_ts)+ggtitle(\"ACF Plot for Unemployment Rate\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(unem_ts)+ggtitle(\"PACF Plot for Unemployment Rate\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the Unemployment Rate time series is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(cpi_ts)+ggtitle(\"ACF Plot for CPI\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(cpi_ts)+ggtitle(\"PACF Plot for CPI\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the CPI time series is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(sp5_ts)+ggtitle(\"ACF Plot for S&P 500 Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(sp5_ts)+ggtitle(\"PACF Plot for S&P 500 Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the S&P Index is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(xau_ts)+ggtitle(\"ACF Plot for Gold Price\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(xau_ts)+ggtitle(\"PACF Plot for Gold Price\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the Gold Price time series is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(gsci_ts)+ggtitle(\"ACF Plot for S&P GSCI Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(gsci_ts)+ggtitle(\"PACF Plot for S&P GSCI Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot shows a very slow decay over time, meaning autocorrelation remains high for many lags and decays very slowly towards zero. The PACF plot shows a sharp drop at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the S&P GSCI Index is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(house_ts)+ggtitle(\"ACF Plot for House Price Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(house_ts)+ggtitle(\"PACF Plot for House Price Index\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot for the house price remains significant up to lag 16, indicating a long-lasting influence over a considerable number of lags. The PACF plot shows a significant value at lag 1, and then the values will rapidly approach zero. Only the first lag is significant, and the rest are close to zero. This indicates that the house price time series is non-stationary, and it may be unit root non-stationary.\n\n\n\n\nCode\nacf &lt;- ggAcf(visitors_ts)+ggtitle(\"ACF Plot for Number of International Visitors\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \npacf &lt;- ggPacf(visitors_ts)+ggtitle(\"PACF Plot for Number of International Visitors\") + theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(acf, pacf, nrow=2)\n\n\n\n\n\n\n\n\n\nThe ACF plot for the number of international visitors remains significant up to lag 16, indicating a long-lasting influence over a considerable number of lags. The PACF plot reveals significant values at lag 1 and a few other lags, suggesting partial relationships at these specific points. This indicates that the house price time series is non-stationary, and it may be unit root non-stationary.\n\n\n\nOverall, all variables exhibit significant autocorrelation, suggesting that the time series are non-stationary. To make the series stationary, we will need to apply techniques like detrending or differencing. These methods can help remove long-term trends or seasonality, ensuring the data becomes stationary, which is crucial for reliable modeling and forecasting.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#augmented-dickey-fuller-test",
    "href": "eda.html#augmented-dickey-fuller-test",
    "title": "Exploratory Data Analysis",
    "section": "5. Augmented Dickey-Fuller Test",
    "text": "5. Augmented Dickey-Fuller Test\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nlibrary(tseries)\nadf.test(dxy_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  dxy_ts\nDickey-Fuller = -2.6316, Lag order = 17, p-value = 0.3109\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(balance_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  balance_ts\nDickey-Fuller = -2.1425, Lag order = 4, p-value = 0.5174\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(gdp_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  gdp_ts\nDickey-Fuller = -0.0084786, Lag order = 4, p-value = 0.99\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(unem_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  unem_ts\nDickey-Fuller = -2.2088, Lag order = 6, p-value = 0.4882\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(cpi_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  cpi_ts\nDickey-Fuller = 0.39171, Lag order = 6, p-value = 0.99\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(sp5_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  sp5_ts\nDickey-Fuller = -0.67242, Lag order = 17, p-value = 0.973\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(xau_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  xau_ts\nDickey-Fuller = -2.186, Lag order = 10, p-value = 0.4996\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(gsci_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  gsci_ts\nDickey-Fuller = -2.362, Lag order = 13, p-value = 0.4251\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(house_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  house_ts\nDickey-Fuller = -1.3735, Lag order = 4, p-value = 0.832\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(visitors_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  visitors_ts\nDickey-Fuller = -2.4163, Lag order = 6, p-value = 0.4008\nalternative hypothesis: stationary\n\n\n\n\n\nThe p-values in the ADF (Augmented Dickey-Fuller) tests for all variables are above 0.05, which means we fail to reject the null hypothesis of the test. This indicates that the time series for all variables are non-stationary, which is consistent with our previous observations. To make the time series stationary, we need to apply differencing, which helps remove trends and make the data more stable over time. Therefore, differencing is necessary to achieve stationarity before proceeding with further time series analysis.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#differencing",
    "href": "eda.html#differencing",
    "title": "Exploratory Data Analysis",
    "section": "6. Differencing",
    "text": "6. Differencing\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(dxy_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(dxy_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the USD Index, the plots clearly indicate that first-order differencing is sufficient, as most of the ACF values after first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(balance_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(balance_ts, lag=4), 50, main=\"ACF of Seasonal Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff3 &lt;- ggAcf(diff(diff(balance_ts, lag=4)), 50, main=\"ACF of both Seasonal and Ordinary Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, diff3, nrow=3)\n\n\n\n\n\n\n\n\n\nFor the trade balance, the ACF plot after first differencing still exhibits significant seasonality, suggesting that seasonal differencing is required. Applying both seasonal differencing and first-order differencing together proves effective, as most of the ACF values become insignificant. Only two lags remain significant, indicating that the series is now much closer to being stationary.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(gdp_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(gdp_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the GDP, the plots clearly indicate that first-order differencing is sufficient, as the ACF values of the first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(unem_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(unem_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the Unemployment Rate, the plots clearly indicate that first-order differencing is sufficient, as the ACF values of the first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(cpi_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(cpi_ts, lag=12), 50, main=\"ACF of Seasonal Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff3 &lt;- ggAcf(diff(diff(cpi_ts, lag=12)), 50, main=\"ACF of both Seasonal and Ordinary Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, diff3, nrow=3)\n\n\n\n\n\n\n\n\n\nFor the CPI, first-order ordinary differencing alone still exhibits significant seasonality, while seasonal differencing results in a trend, (still non-stationary). Only when both first-order differencing and seasonal differencing are applied does the series become stationary. After both differencing, only two lags in the ACF plot remain significant. This means that our method successfully removes both the trend and seasonality from the time series.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(sp5_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(sp5_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the S&P 500 Index, the plots clearly indicate that first-order differencing is sufficient, as most of the ACF values after first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(xau_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(xau_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the Gold Price, the plots clearly indicate that first-order differencing is sufficient, as most of the ACF values after first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(gsci_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(gsci_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the Global Commodity Price, the plots clearly indicate that first-order differencing is sufficient, as most of the ACF values after first-order differencing fall within the threshold and are no longer significant. Moreover, second-order differencing leads to over-differencing, as only the lag-1 autocorrelation is highly negative. This suggests that first-order differencing is the most appropriate method for achieving stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(house_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(house_ts, 2), 50, main=\"ACF of Second Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, nrow=2)\n\n\n\n\n\n\n\n\n\nFor the house price data, both the ACF plots for first-order and second-order differencing show significant trends. This suggests that the series still exhibits non-stationary behavior even after differencing. The persistence of significant autocorrelation across both differencing orders suggests that the underlying trend is strong and may require further transformation to achieve stationarity.\n\n\n\n\nCode\ndiff1 &lt;- ggAcf(diff(visitors_ts), 50, main=\"ACF of First Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff2 &lt;- ggAcf(diff(visitors_ts, lag=12), 50, main=\"ACF of Seasonal Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ndiff3 &lt;- ggAcf(diff(diff(visitors_ts, lag=12)), 50, main=\"ACF of both Seasonal and Ordinary Differencing\")+ theme_bw()+\n  geom_segment(lineend = \"butt\", color = \"#5a3196\") +\n    geom_hline(yintercept = 0, color = \"#5a3196\") \ngrid.arrange(diff1, diff2, diff3, nrow=3)\n\n\n\n\n\n\n\n\n\nFor the number of international visitors, first-order ordinary differencing alone still exhibits significant seasonality, while seasonal differencing results in a trend, (still non-stationary). Only when both first-order differencing and seasonal differencing are applied does the series become stationary. After both differencing, only two lags in the ACF plot remain significant. This means that our method successfully removes both the trend and seasonality from the time series.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#adf-test-after-differencing",
    "href": "eda.html#adf-test-after-differencing",
    "title": "Exploratory Data Analysis",
    "section": "8. ADF Test after Differencing",
    "text": "8. ADF Test after Differencing\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nadf.test(diff(dxy_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(dxy_ts)\nDickey-Fuller = -16.743, Lag order = 17, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(diff(balance_ts, lag=4)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(diff(balance_ts, lag = 4))\nDickey-Fuller = -3.9829, Lag order = 4, p-value = 0.01527\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(gdp_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(gdp_ts)\nDickey-Fuller = -3.581, Lag order = 4, p-value = 0.04066\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(unem_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(unem_ts)\nDickey-Fuller = -6.153, Lag order = 6, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(diff(cpi_ts, lag=12)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(diff(cpi_ts, lag = 12))\nDickey-Fuller = -5.0779, Lag order = 5, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(sp5_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(sp5_ts)\nDickey-Fuller = -17.316, Lag order = 17, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(xau_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(xau_ts)\nDickey-Fuller = -10.28, Lag order = 10, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(gsci_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(gsci_ts)\nDickey-Fuller = -12.874, Lag order = 13, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(house_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(house_ts)\nDickey-Fuller = -3.6739, Lag order = 4, p-value = 0.03252\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(diff(visitors_ts, lag=12)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(diff(visitors_ts, lag = 12))\nDickey-Fuller = -5.7162, Lag order = 6, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\nThe results align with expectations, as the p-values of the ADF test for all differenced series are less than 0.05. This indicates that we can reject the null hypothesis of non-stationarity at the 5% significance level. Therefore, after differencing, all time series have become stationary.",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "eda.html#moving-average",
    "href": "eda.html#moving-average",
    "title": "Exploratory Data Analysis",
    "section": "8. Moving Average",
    "text": "8. Moving Average\n\nU.S. Dollar IndexTrade BalanceGDPUnemployment RateCPIS&P 500Gold PriceGlobal Commodity PriceHouse PriceInternational Visitors\n\n\n\n\nCode\nautoplot(dxy_ts) +\n  autolayer(ma(dxy_ts, 20), series=\"20-MA\") +\n  autolayer(ma(dxy_ts, 50), series=\"50-MA\") +\n  autolayer(ma(dxy_ts, 200), series=\"200-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(balance_ts) +\n  autolayer(ma(balance_ts, 12), series=\"12-MA\") +\n  autolayer(ma(balance_ts, 24), series=\"24-MA\") +\n  autolayer(ma(balance_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(gdp_ts) +\n  autolayer(ma(gdp_ts, 12), series=\"12-MA\") +\n  autolayer(ma(gdp_ts, 24), series=\"24-MA\") +\n  autolayer(ma(gdp_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(unem_ts) +\n  autolayer(ma(unem_ts, 12), series=\"12-MA\") +\n  autolayer(ma(unem_ts, 24), series=\"24-MA\") +\n  autolayer(ma(unem_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(cpi_ts) +\n  autolayer(ma(cpi_ts, 12), series=\"12-MA\") +\n  autolayer(ma(cpi_ts, 24), series=\"24-MA\") +\n  autolayer(ma(cpi_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(sp5_ts) +\n  autolayer(ma(sp5_ts, 20), series=\"20-MA\") +\n  autolayer(ma(sp5_ts, 50), series=\"50-MA\") +\n  autolayer(ma(sp5_ts, 200), series=\"200-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(xau_ts) +\n  autolayer(ma(xau_ts, 20), series=\"20-MA\") +\n  autolayer(ma(xau_ts, 50), series=\"50-MA\") +\n  autolayer(ma(xau_ts, 200), series=\"200-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(gsci_ts) +\n  autolayer(ma(gsci_ts, 20), series=\"20-MA\") +\n  autolayer(ma(gsci_ts, 50), series=\"50-MA\") +\n  autolayer(ma(gsci_ts, 200), series=\"200-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(house_ts) +\n  autolayer(ma(house_ts, 12), series=\"12-MA\") +\n  autolayer(ma(house_ts, 24), series=\"24-MA\") +\n  autolayer(ma(house_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nautoplot(visitors_ts) +\n  autolayer(ma(visitors_ts, 12), series=\"12-MA\") +\n  autolayer(ma(visitors_ts, 24), series=\"24-MA\") +\n  autolayer(ma(visitors_ts, 36), series=\"36-MA\") +\n  labs(title = \"Moving Average Smoothing\",\n       y = \"Value\",\n       x = \"Time\") +\n  theme_minimal()",
    "crumbs": [
      "EDA"
    ]
  },
  {
    "objectID": "data_cleaning.html",
    "href": "data_cleaning.html",
    "title": "DSAN5600: TS Project",
    "section": "",
    "text": "library(scales)\n\n# Load the data\nexports &lt;- read.csv(\"./raw_data/bea_international_account.csv\", header = FALSE, skip = 8, nrows = 1)\nimports &lt;- read.csv(\"./raw_data/bea_international_account.csv\", header = FALSE, skip = 10, nrows = 1)\nnet_out &lt;- read.csv(\"./raw_data/bea_international_account.csv\", header = FALSE, skip = 12, nrows = 1)\nnet_in &lt;- read.csv(\"./raw_data/bea_international_account.csv\", header = FALSE, skip = 13, nrows = 1)\nbea &lt;- data.frame(exports = t(exports), imports = t(imports), net_in = t(net_in), net_out = t(net_out))\nbea &lt;- bea[3:nrow(bea), ]\nbea$time &lt;- as.Date(seq(from = as.Date(\"2005-01-01\"), to = as.Date(\"2024-09-01\"), by = \"quarter\"))\nbea$exports &lt;- as.numeric(bea$exports)\nbea$imports &lt;- as.numeric(bea$imports)\nbea$net_out &lt;- as.numeric(bea$net_out)\nbea$net_in &lt;- as.numeric(bea$net_in)\nbea$balance &lt;- bea$export - bea$import\n# write.csv(bea,\"./data/cleaned_bea.csv\", row.names = FALSE)\n\n\n# Load the data\nconsumption &lt;- read.csv(\"./raw_data/US_GDP.csv\", header = FALSE, skip = 6, nrows = 1)\ninvestment &lt;- read.csv(\"./raw_data/US_GDP.csv\", header = FALSE, skip = 11, nrows = 1)\nnet_export &lt;- read.csv(\"./raw_data/US_GDP.csv\", header = FALSE, skip = 19, nrows = 1)\ngovernment &lt;- read.csv(\"./raw_data/US_GDP.csv\", header = FALSE, skip = 26, nrows = 1)\ngdp &lt;- data.frame(consumption = t(consumption), investment = t(investment), net_export = t(net_export), government = t(government))\ngdp &lt;- gdp[3:nrow(gdp), ]\ngdp$time &lt;- as.Date(seq(from = as.Date(\"2005-01-01\"), to = as.Date(\"2024-09-01\"), by = \"quarter\"))\ngdp$consumption &lt;- as.numeric(gdp$consumption)\ngdp$investment &lt;- as.numeric(gdp$investment)\ngdp$net_export &lt;- as.numeric(gdp$net_export)\ngdp$government &lt;- as.numeric(gdp$government)\n# write.csv(gdp,\"./data/gdp.csv\", row.names = FALSE)\n\n\n# 加载必要的库\nlibrary(tidyverse)\nlibrary(readxl)\n\n# 读取Excel文件\ndata &lt;- read_excel(\"./data/cpi.xlsx\")\n\n# 转换为long-form\ndata_long &lt;- data %&gt;%\n  pivot_longer(cols = Jan:Dec,    # 选择月份列\n               names_to = \"time\", # 新的时间列\n               values_to = \"cpi\") # 新的cpi列\n\nwrite.csv(data_long,\"./data/cpi.csv\", row.names = FALSE)\n\n\n# 读取Excel文件\ndata &lt;- read_excel(\"./data/Unemployment_rate.xlsx\")\n\n# 转换为long-form\ndata_long &lt;- data %&gt;%\n  pivot_longer(cols = Jan:Dec,    # 选择月份列\n               names_to = \"time\", # 新的时间列\n               values_to = \"unem\") # 新的cpi列\n\nwrite.csv(data_long,\"./data/unem.csv\", row.names = FALSE)\n\n\nxau &lt;- read.csv(\"./raw_data/XAU.csv\", header=TRUE)\nxau$Date &lt;- as.Date(xau$Date, format = \"%m/%d/%Y\")\nxau$Price &lt;- as.numeric(gsub(\",\", \"\", xau$Price))\nxau$Price &lt;- as.numeric(xau$Price)\nxau &lt;- xau[order(xau$Date), ]\n# write.csv(xau,\"./data/xau.csv\", row.names = FALSE)\n\n\nlibrary(readxl)\ngsci &lt;- read_excel(\"./raw_data/S&P_GSCI.xls\", skip = 7, col_names = FALSE)\ngsci &lt;- gsci[1:2536, ]\ncolnames(gsci) &lt;- c(\"Date\", \"Price\")\ngsci &lt;- gsci[order(gsci$Date), ]\n# write.csv(gsci,\"./data/gsci.csv\", row.names = FALSE)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hi! My name is Binghui Ni. I am a first-year student in the Data Science and Analytics program at Georgetown University. And my undergraduate degree is a B.S. in Economics from Central University of Finance and Economics. All of my experiences have fueled my desire to learn about various aspects of data science, especially time series. I am excited to complete this course and gain a breadth of time series knowledge.",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "about.html#background",
    "href": "about.html#background",
    "title": "About Me",
    "section": "",
    "text": "Hi! My name is Binghui Ni. I am a first-year student in the Data Science and Analytics program at Georgetown University. And my undergraduate degree is a B.S. in Economics from Central University of Finance and Economics. All of my experiences have fueled my desire to learn about various aspects of data science, especially time series. I am excited to complete this course and gain a breadth of time series knowledge.",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n\n2024: M.S. in Data Sicence at Georgetown University\n2020: B.S. in Economics at Central University of Finance and Economics",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "about.html#academic-interests",
    "href": "about.html#academic-interests",
    "title": "About Me",
    "section": "Academic Interests",
    "text": "Academic Interests\n\nFinancial Analysis\nPrediction Analysis\nLLM in Medical Insurance Policy Field\nOther Emerging Fields",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About Me",
    "section": "Contact",
    "text": "Contact\n\nNet ID: BN259\nGU Email: bn259@georgetown.edu",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "data_sources.html",
    "href": "data_sources.html",
    "title": "Data Sources",
    "section": "",
    "text": "Note\n\n\n\nThe raw data collected for this project is available here, and the sources are provided in the text.",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "data_sources.html#u.s.-dollar-index",
    "href": "data_sources.html#u.s.-dollar-index",
    "title": "Data Sources",
    "section": "U.S. Dollar Index",
    "text": "U.S. Dollar Index\n\nData Source: Yahoo Finance\n\n\n\n\nFigure 2.1: U.S. Dollar Index Over Time. Source: Yahoo Finance\n\n\n\nDescription: This dataset contains daily U.S. Dollar Index data from January 1, 2005, to December 31, 2024.\n\nThe U.S. Dollar Index measures the value of the U.S. dollar against a basket of major foreign currencies, including the euro, Japanese yen, British pound, Canadian dollar, Swedish krona, and Swiss franc.\n\n\nDaily data provides a more detailed view of the market, allowing for the identification of short-term fluctuations as well as long-term trends.\n\n\nHere is a view of a sample of the data:\n\n\n\n\n\n\n\nDX-Y.NYB.Open\nDX-Y.NYB.High\nDX-Y.NYB.Low\nDX-Y.NYB.Close\nDX-Y.NYB.Volume\nDX-Y.NYB.Adjusted\n\n\n\n\n81.05\n81.76\n80.77\n81.30\n0\n81.30\n\n\n81.36\n82.71\n81.18\n82.57\n0\n82.57\n\n\n82.49\n82.92\n82.30\n82.54\n0\n82.54\n\n\n82.45\n83.23\n82.43\n83.15\n0\n83.15\n\n\n83.07\n83.79\n82.61\n83.61\n0\n83.61\n\n\n83.49\n83.61\n83.13\n83.29\n0\n83.29",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "data_sources.html#u.s.-international-trade",
    "href": "data_sources.html#u.s.-international-trade",
    "title": "Data Sources",
    "section": "U.S. International Trade",
    "text": "U.S. International Trade\n\nData Source: U.S. Bureau of Economic Analysis (BEA)\n\n\n\n\nFigure 2.2: U.S. International Trade Over Time. Source: BEA\n\n\n\nDescription: This dataset contains quarterly, not seasonally adjusted U.S. exports and imports of goods and services in the current account, and net financial outflows and inflows in the financial account from 2005 Q1 to 2024 Q3.\n\nCurrent Account: The current account measures the flow of goods, services, income, and current transfers into and out of the U.S. It includes trade in goods and services, income receipts from abroad (such as investment income and wages), and current transfers like remittances.\nExports of Goods and Services: This refers to the value of all goods and services that the U.S. sells to foreign countries. Exports include both tangible products (goods) and intangible products (services) such as financial services, tourism, and intellectual property.\nImports of Goods and Services: This refers to the value of all goods and services that the U.S. purchases from foreign countries. It encompasses both physical goods (such as electronics, machinery, etc.) and services (such as insurance, transportation, and consulting).\nFinancial Account: The financial account records transactions that involve financial assets and liabilities. It reflects the net change in ownership of U.S. financial assets and liabilities, including direct investments, portfolio investments, and other financial instruments.\nFinancial Outflow: The net U.S. Acquisition of Financial Assets Excluding Financial Derivatives (Net Increase in Assets) measures the U.S.’s net purchases of foreign financial assets, such as stocks, bonds, and real estate. A net increase in assets indicates a financial outflow from the U.S. to other countries.\nFinancial Inflow: The net U.S. Incurrence of Liabilities Excluding Financial Derivatives (Net Increase in Liabilities) refers to the net increase in foreign investments or loans in the U.S., including foreign direct investment, portfolio investment, and other types of financial liabilities. A net increase in liabilities indicates a financial inflow into the U.S. from foreign entities.\nQuarterly, Not Seasonally Adjusted: The data is provided on a quarterly basis, which allows for a better understanding of short-term fluctuations and trends compared to annual data. The data is not seasonally adjusted because seasonal variations (such as those due to holidays or weather) will be analyzed and removed in later analysis.",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "data_sources.html#domestic-macroeconomic-factors",
    "href": "data_sources.html#domestic-macroeconomic-factors",
    "title": "Data Sources",
    "section": "Domestic Macroeconomic Factors",
    "text": "Domestic Macroeconomic Factors\n\nGDP\n\nData Source: U.S. Bureau of Economic Analysis (BEA)\n\n\n\n\nFigure 2.3: U.S. GDP Over Time. Source: BEA\n\n\n\nDescription: This dataset contains quarterly U.S. Gross Domestic Product (GDP) in billions from 2005 Q1 to 2024 Q3.\n\nGross Domestic Product (GDP): GDP is the total monetary value of all goods and services produced within a country’s borders over a specific period, typically measured annually or quarterly. It serves as a comprehensive indicator of a nation’s economic performance. GDP includes the value of consumption, investment, government spending, and net exports (exports minus imports). It is often used to compare the economic health of different countries or to track the economic performance of a single country over time.\n\n\n\n\nUnemployment Rate\n\nData Source: U.S. Bureau of Labor Statistics\n\n\n\n\nFigure 2.4: U.S. Unemployment Rate Over Time. Source: BLS\n\n\n\nDescription: This dataset contains monthly U.S. unemployment rate data from 2005-01 to 2024-12.\n\nUnemployment Rate: The unemployment rate is the percentage of the labor force that is unemployed but actively seeking work. It is a key indicator of economic health, as a high unemployment rate suggests that an economy may be underperforming, with insufficient job opportunities. Conversely, a low unemployment rate indicates a more thriving job market and better economic conditions. It helps policymakers assess the effectiveness of economic policies and determine whether interventions are needed to promote job growth.\n\n\n\n\nCPI\n\nData Source: U.S. Bureau of Labor Statistics\n\n\n\n\nFigure 2.5: U.S. CPI Over Time. Source: BLS\n\n\n\nDescription: This dataset contains monthly U.S. CPI data from 2005-01 to 2024-12.\n\nConsumer Price Index (CPI): The Consumer Price Index (CPI) measures the average change in prices paid by consumers for goods and services over time. It is used to track inflation, reflecting the cost of living in a particular country. The CPI is a critical indicator for policymakers, as it helps in adjusting wages, pensions, and social security benefits to keep up with inflation. A rising CPI indicates inflationary pressures, while a falling CPI may signal deflation, both of which have significant implications for the economy.",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "data_sources.html#financial-market-factors",
    "href": "data_sources.html#financial-market-factors",
    "title": "Data Sources",
    "section": "Financial Market Factors",
    "text": "Financial Market Factors\n\nStock Market\n\nData Source: Yahoo Finance\n\n\n\n\nFigure 2.6: S&P 500 Index Over Time. Source: Yahoo Finance\n\n\n\nDescription: This dataset contains daily S&P 500 Index data from January 1, 2005, to December 31, 2024.\n\nS&P 500 Index: The S&P 500 Index is a market-capitalization-weighted index of 500 of the largest publicly traded companies in the U.S. It is widely regarded as one of the best representations of the U.S. stock market’s overall performance. The index includes companies across various industries and is used by investors to track the health of the U.S. economy and as a benchmark for investment performance. The daily data in this dataset includes key information such as the opening, closing, high, low, and adjusted closing prices for each trading day, along with the trading volume. It is commonly used by analysts, traders, and economists to assess market trends and make informed investment decisions.\n\n\n\n\nGold Market\n\nData Source: Investing.com\n\n\n\n\nFigure 2.7: Spot Gold Price Over Time. Source: GoldPrice.org\n\n\n\nDescription: This dataset contains weekly Spot Gold in US Dollar from January 1, 2005, to December 31, 2024.\n\nSpot Gold(XAU/USD): The Spot Gold price (XAU/USD) refers to the current price of gold for immediate delivery, quoted in US dollars per ounce. It is the most widely used measure of gold’s market value and is influenced by factors like global demand for gold, inflation expectations, and economic stability. This price fluctuates throughout the trading day based on market dynamics and is a crucial benchmark in the gold market.\n\n\n\n\nGlobal Commodity Prices\n\nData Source: S&P Global\n\n\n\n\nFigure 2.8: S&P GSCI Index (USD) Over Time. Source: S&P Global\n\n\n\nDescription: This dataset contains daily S&P GSCI Index price in US Dollar from December 31, 2014, to December 31, 2024. The S&P GSCI is the first major investable commodity index. It is one of the most widely recognized benchmarks that is broad-based and production weighted to represent the global commodity market beta. The index is designed to be investable by including the most liquid commodity futures, and provides diversification with low correlations to other asset classes.",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "data_sources.html#real-estate-tourism-market-factors",
    "href": "data_sources.html#real-estate-tourism-market-factors",
    "title": "Data Sources",
    "section": "Real Estate & Tourism Market Factors",
    "text": "Real Estate & Tourism Market Factors\n\nHouse Price\n\nData Source: FRED\n\n\n\n\nFigure 2.9: House Price Index for the United States (USSTHPI). Source: FRED\n\n\n\nDescription: This dataset contains quarterly All-Transactions House Price Index (USSTHPI) data for the United States from January 2005 to October 2024. The index tracks the price changes of residential properties across the country, reflecting the overall health of the housing market. It provides valuable insights into long-term trends in home prices, which are influenced by factors such as supply and demand, interest rates, and economic conditions. This dataset is widely used for real estate market analysis, economic forecasting, and assessing housing affordability over time.\n\n\n\nTourism Market\n\nData Source: International Trade Administration\n\n\n\n\nFigure 2.10: Visitor Arrivals Over Time. Source: ITA\n\n\n\nDescription: This dataset contains monthly Non-U.S. Resident Visitor Arrivals to the United States from January 2005 to December 2024. It provides insights into the trends and patterns of international tourism, reflecting the number of visitors arriving in the U.S. each month. The data is influenced by factors such as global travel conditions, economic trends, visa policies, and major international events. This dataset is valuable for analyzing tourism trends, supporting economic impact studies, and informing policy decisions related to travel and tourism in the U.S.",
    "crumbs": [
      "Data Sources"
    ]
  },
  {
    "objectID": "dv.html",
    "href": "dv.html",
    "title": "Time Series Data Visualization",
    "section": "",
    "text": "This is an interactive U.S. Dollar Index candlestick chart. It shows the opening, closing, high, and low prices of the index on a daily basis. You can zoom in or pan to explore data for specific time periods, making it easier to analyze price movements and trends over different time spans.\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(plotly)\n\ndxy &lt;- read.csv(\"./data/USD.csv\",header =TRUE)\ndxy$Date &lt;- as.Date(dxy$Date, format = \"%m/%d/%Y\")\nfigc &lt;- dxy %&gt;% plot_ly(x = ~Date, type = \"candlestick\",\n                       open = ~Open, close = ~Price,\n                       high = ~High, low = ~Low)\nfigc &lt;- figc %&gt;% layout(title = \"U.S. Dollar Index (DXY) Candlestick Plot\")\n\nfigc\n\n\n\n\n\n\nThe plot shows an upward trend. From 2005 to 2015, the U.S. Dollar Index fluctuated between 70 and 90. In late 2014, it experienced the first sharp increase and reached 100. Between 2015 and 2020, it oscillated between 90 and 100, with notable declines in 2017 and 2020. However, in 2021 and 2022, the index surged again, peaking above 110 before stabilizing around 105.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "dv.html#trend-of-u.s.-dollar-index",
    "href": "dv.html#trend-of-u.s.-dollar-index",
    "title": "Time Series Data Visualization",
    "section": "",
    "text": "This is an interactive U.S. Dollar Index candlestick chart. It shows the opening, closing, high, and low prices of the index on a daily basis. You can zoom in or pan to explore data for specific time periods, making it easier to analyze price movements and trends over different time spans.\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(plotly)\n\ndxy &lt;- read.csv(\"./data/USD.csv\",header =TRUE)\ndxy$Date &lt;- as.Date(dxy$Date, format = \"%m/%d/%Y\")\nfigc &lt;- dxy %&gt;% plot_ly(x = ~Date, type = \"candlestick\",\n                       open = ~Open, close = ~Price,\n                       high = ~High, low = ~Low)\nfigc &lt;- figc %&gt;% layout(title = \"U.S. Dollar Index (DXY) Candlestick Plot\")\n\nfigc\n\n\n\n\n\n\nThe plot shows an upward trend. From 2005 to 2015, the U.S. Dollar Index fluctuated between 70 and 90. In late 2014, it experienced the first sharp increase and reached 100. Between 2015 and 2020, it oscillated between 90 and 100, with notable declines in 2017 and 2020. However, in 2021 and 2022, the index surged again, peaking above 110 before stabilizing around 105.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "dv.html#trend-of-international-trade",
    "href": "dv.html#trend-of-international-trade",
    "title": "Time Series Data Visualization",
    "section": "2. Trend of International Trade",
    "text": "2. Trend of International Trade\n\nCurrent AccountTrade BalanceFinancial account\n\n\nThe graph shows the overall trends in exports and imports of goods and services. It illustrates how these values have changed over time, helping to identify patterns, fluctuations, and potential trade imbalances.\n\n\nCode\nbea &lt;- read.csv(\"./data/bea.csv\")\nbea$time &lt;- as.Date(seq(from = as.Date(\"2005-01-01\"), to = as.Date(\"2024-09-01\"), by = \"quarter\"))\n\ngg &lt;- ggplot(bea) + \n  geom_line(aes(x = time, y = exports/1000, color = \"Exports\")) +\n  geom_line(aes(x = time, y = imports/1000, color = \"Imports\")) +\n  labs(x = \"Year\", y = \"Billions of Dollars\", color = \"Legend\", \n  title = \"Trends of Exports and Imports\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot shows that export and import trends move in sync over time. However, imports are always about $200 billion higher than exports. It indicates that the U.S. is a major trading country and consistently runs a trade deficit. Both exports and imports saw sharp declines in 2008 and 2020, likely due to the financial crisis and the COVID-19 pandemic.\n\n\nThe graph shows the overall trends in trade balance (net exports of goods and services). It helps visualize changes over time and identify patterns in the US international trade performance, such as periods of trade deficits or surpluses.\n\n\nCode\ngg &lt;- ggplot(bea) + \n  geom_line(aes(x = time, y = balance/1000), color = \"purple\") +\n  labs(x = \"Year\", y = \"Billions of Dollars\", \n  title = \"Trends of Trade Balance\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe trade balance shown in the plot has been consistently negative over the long term, indicating that the US has been running a trade deficit, importing more than it exports. The significant rise in the trade balance around 2008 could be attributed to the global financial crisis, which led to a sharp contraction in global trade. From 2009 to 2020, the trade balance remained relatively stable, with a slight decline, possibly reflecting steady economic conditions and moderate shifts in trade patterns. However, in 2020, there is a sharp drop in the trade balance, which could be linked to the economic disruptions caused by the COVID-19 pandemic, including supply chain interruptions, changes in consumption patterns, and reduced international trade.\n\n\nThe graph shows the overall trends in financial outflows (net increase in assets) and financial inflows (net decrease in assets). It helps visualize changes over time and identify patterns in capital movement.\n\n\nCode\ngg &lt;- ggplot(bea) + \n  geom_line(aes(x = time, y = net_out/1000, color = \"Financial Outflow\")) +\n  geom_line(aes(x = time, y = net_in/1000, color = \"Financial Inflow\")) +\n  labs(x = \"Year\", y = \"Billions of Dollars\", color = \"Legend\",\n  title = \"Trends of Financial Inflows and Outflows\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot shows that financial inflows and outflows move in sync over time, with significant fluctuations. Inflows are always slightly higher than outflows, indicating that the U.S. consistently attracts more foreign investment than it sends abroad, leading to a net capital inflow.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "dv.html#macroeconomic-factors",
    "href": "dv.html#macroeconomic-factors",
    "title": "Time Series Data Visualization",
    "section": "3. Macroeconomic Factors",
    "text": "3. Macroeconomic Factors\n\nGDPUnemploymentCPI\n\n\nGross Domestic Product (GDP) is the total value of all goods and services produced within a country, and it consists of four main components: consumption, investment, government spending, and net exports. Consumption refers to household spending on goods and services, while investment includes business capital spending, residential construction, and changes in inventories. Government spending covers expenditures on goods and services, excluding transfer payments, and net exports are the difference between a country’s exports and imports. Together, these components provide a comprehensive measure of a country’s economic activity.\n\n\nCode\ngdp &lt;- read.csv(\"./data/gdp.csv\")\ngdp$time &lt;- as.Date(seq(from = as.Date(\"2005-01-01\"), to = as.Date(\"2024-09-01\"), by = \"quarter\"))\ngdp_long &lt;- pivot_longer(gdp, \n                         cols = c(consumption, investment, net_export, government), \n                         names_to = \"Category\", \n                         values_to = \"Value\")\n\ngg &lt;- ggplot(gdp_long, aes(x = time, y = Value, fill = Category)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Year\", y = \"Billions of Dollars\", \n       title = \"Total Contribution to GDP by Time and Category\", \n       fill = \"Category\") +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme(\n    axis.text = element_text(size = 11),  \n    axis.title = element_text(size = 11, face = 'bold'), \n    title = element_text(size = 12, hjust = 0.5, face = 'bold'),\n    panel.background = element_rect(fill = \"white\"), \n    panel.grid.minor = element_line(color = \"gray\", linetype = \"dotted\"),\n    panel.grid.major = element_line(color = \"gray\", linetype = \"dotted\")\n  ) +\n  scale_y_continuous(labels = scales::comma_format())\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg \n\n\n\n\n\n\nThe plot shows the four components of U.S. GDP over time. From earlier analysis, we know that the U.S. consistently runs a $200 billion trade deficit, which aligns with the negative $200 billion net exports in this plot. Government spending has remained relatively stable, while investment has grown slightly. Consumption, however, has increased significantly, rising from $8,551 billion in 2005 to $19,938 billion in 2025. This highlights that consumption is the dominant part of U.S. GDP and suggests that investment may be insufficient, which could hinder technological progress.\nGDP experienced two major declines, one in 2008 due to the financial crisis and another in 2020 caused by COVID-19. The 2008 decline had a lasting impact on GDP, leading to a slower recovery with steady growth afterward. In contrast, the 2020 drop was followed by a rapid rebound, with GDP growth accelerating even beyond its previous trend.\n\n\nThe unemployment rate is the percentage of the labor force that is unemployed but actively seeking work. It is a key indicator of economic health, as a high unemployment rate suggests that an economy may be underperforming, with insufficient job opportunities. Conversely, a low unemployment rate indicates a more thriving job market and better economic conditions.\n\n\nCode\ndata_unem &lt;- read.csv(\"./data/unem.csv\", header=TRUE)\ndata_unem$time &lt;- as.Date(data_unem$time)\ngg &lt;- ggplot(data = data_unem, aes(x = time, y = unem)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Rate\", title = \"U.S. Unemployment Rate Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nFrom 2008 to 2009, the unemployment rate increased significantly, primarily due to the global financial crisis. The economic recession led to business closures, layoffs, and a reduction in investments, causing a massive loss of jobs. This spike in unemployment reflects the severe impact the economic downturn had on the labor market.\nFrom 2009 to 2020, the unemployment rate consistently decreased as the economy recovered. This was due to a steady economic growth, increased job creation, and recovery in industries that had been hit hard during the recession. With the rise in consumer demand and business expansions, more job opportunities became available, helping bring the unemployment rate down.\nIn 2020, the unemployment rate spiked dramatically due to the COVID-19 pandemic, which led to widespread lockdowns, business closures, and disruptions in many industries. However, the recovery was quick. By 2022, the unemployment rate returned to pre-pandemic levels. This rapid recovery can be attributed to government stimulus measures, the adaptation of businesses to new operating models (such as remote work), and the strong rebound in sectors like technology and e-commerce.\n\n\nThe Consumer Price Index (CPI) measures the average change in prices paid by consumers for goods and services over time. It is used to track inflation, reflecting the cost of living in a particular country.\n\n\nCode\ndata_cpi &lt;- read.csv(\"./data/cpi.csv\", header=TRUE)\ndata_cpi$time &lt;- as.Date(data_cpi$time)\ngg &lt;- ggplot(data = data_cpi, aes(x = time, y = cpi)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"U.S. CPI Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nFrom 2005 to 2024, the overall trend in the Consumer Price Index (CPI) shows a gradual increase, indicating rising inflation over the period. In 2008, there was a brief spike in CPI, likely due to the global financial crisis, but it quickly returned to normal levels as the economy stabilized. However, after 2021, the rate of increase in CPI accelerated, largely due to the economic effects of the COVID-19 pandemic, supply chain disruptions, and rising demand as economies reopened. This surge in inflation reflects higher costs in goods and services, influenced by both global and domestic economic factors.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "dv.html#financial-market-factors",
    "href": "dv.html#financial-market-factors",
    "title": "Time Series Data Visualization",
    "section": "4. Financial Market Factors",
    "text": "4. Financial Market Factors\n\nStock MarketGold MarketGlobal Commodity Market\n\n\nThe S&P 500 Index is a market-capitalization-weighted index of 500 of the largest publicly traded companies in the U.S. It is widely regarded as one of the best representations of the U.S. stock market’s overall performance. The index includes companies across various industries and is used by investors to track the health of the U.S. economy and as a benchmark for investment performance.\n\n\nCode\nlibrary(quantmod)\ngetSymbols(\"^GSPC\", src = \"yahoo\", from = \"2005-01-01\", to = \"2024-12-31\") \n\n\n[1] \"GSPC\"\n\n\nCode\ndata &lt;- data.frame(Date = index(GSPC), \n                       Open = GSPC[, \"GSPC.Open\"], \n                       High = GSPC[, \"GSPC.High\"], \n                       Low = GSPC[, \"GSPC.Low\"], \n                       Close = GSPC[, \"GSPC.Close\"])\ncolnames(data) &lt;- c(\"Date\", \"Open\", \"High\", \"Low\", \"Close\")\n\nfigc &lt;- data %&gt;%\n  plot_ly(x = ~Date, type = \"candlestick\",\n          open = ~Open, close = ~Close,\n          high = ~High, low = ~Low)\n\nfigc &lt;- figc %&gt;% layout(title = \"S&P 500 Index Candlestick Plot\",\n                        xaxis = list(type = \"date\", title = \"Date\"),\n                        yaxis = list(title = \"Index Price\"))\nfigc\n\n\n\n\n\n\nThe S&P 500 shows an overall upward trend, reflecting long-term economic growth. In 2008, it briefly declined due to the financial crisis but quickly recovered. In 2020, despite the pandemic, the index surged, likely due to strong government stimulus and the resilience of the tech sector. After a slight drop in 2022, the index rebounded, driven by market corrections and optimism. While both 2008 and 2020 faced crises, the market responded differently, with a strong recovery in 2020, fueled by stimulus and innovation, while 2022’s decline was linked to inflation concerns and rising interest rates.\n\n\nThe Spot Gold price (XAU/USD) refers to the current price of gold for immediate delivery, quoted in US dollars per ounce.\n\n\nCode\nxau &lt;- read.csv(\"./data/xau.csv\", header=TRUE)\nxau$Date &lt;- as.Date(xau$Date)\n\ngg &lt;- ggplot(data = xau, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"Spot Gold in US Dollar\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot shows the trend of spot gold prices over time, with an overall upward trend. Notable surges occurred in 2008-2012, 2019-2020, and 2023-2025. These spikes could be linked to major global events such as the financial crisis, COVID-19, the Russo-Ukrainian War and the Gaza War. Generally, during economic downturns or geopolitical instability, investors tend to favor gold and other precious metals as safe-haven assets.\n\n\nThe S&P GSCI (Standard & Poor’s Goldman Sachs Commodity Index) is a widely recognized benchmark for tracking the performance of the global commodity markets. It represents a diversified basket of 24 commodities, including energy, metals, agricultural products, and livestock. The index is weighted based on the world production of each commodity, with energy commodities such as crude oil and natural gas typically making up a significant portion of the index. The S&P GSCI serves as a key indicator for investors looking to gain exposure to commodity markets and is often used as a reference for commodity-focused investment products like ETFs and futures contracts.\n\n\nCode\ngsci &lt;- read.csv(\"./data/gsci.csv\", header=TRUE)\ngsci$Date &lt;- as.Date(gsci$Date)\n\ngg &lt;- ggplot(data = gsci, aes(x = Date, y = Price)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Dollar ($)\", title = \"S&P GSCI Index (USD) Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe plot shows a significant increase in the S&P GSCI Index from 2020 to 2022, likely due to supply chain disruptions and rising energy prices.\nThe COVID-19 pandemic in 2020 led to severe supply chain challenges, causing volatility in commodity markets. While some commodities, especially energy, saw price drops early in the pandemic, recovery efforts later fueled surging demand and price increases, particularly in energy and metals. As economies reopened, supply chains struggled to keep up, leading to shortages in key commodities such as oil, natural gas, and metals, which drove up prices.\nAnother major factor was the energy crisis in 2021-2022. As global energy demand rebounded, supply remained constrained, especially in oil and natural gas. Geopolitical tensions, including Russia’s invasion of Ukraine in early 2022, further worsened energy shortages, causing oil and gas prices to soar. Since energy commodities make up a large portion of the S&P GSCI Index, these price spikes significantly impacted its overall trend.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "dv.html#real-estate-tourism-market-factors",
    "href": "dv.html#real-estate-tourism-market-factors",
    "title": "Time Series Data Visualization",
    "section": "5. Real Estate & Tourism Market Factors",
    "text": "5. Real Estate & Tourism Market Factors\n\nHouse PriceTourism Market\n\n\nThe House Price Index tracks the price changes of residential properties across the country, reflecting the overall health of the housing market.\n\n\nCode\nhouse &lt;- read.csv(\"./data/house.csv\", header=TRUE)\nhouse$time &lt;- as.Date(house$time)\n\ngg &lt;- ggplot(data = house, aes(x = time, y = index)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Index\", title = \"House Price Index Over Time\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe House Price Index has shown an overall upward trend, indicating steady growth in the housing market. However, between 2007 and 2011, there was a decline in the index, likely due to the global financial crisis, which caused a sharp contraction in the housing market. This period saw widespread defaults, a credit crunch, and a drop in demand for housing. After 2011, the index steadily increased, reflecting the recovery of the housing market, supported by factors such as low interest rates, improved economic conditions, and a resurgence in demand for real estate.\n\n\nWe use the Non-U.S. Resident Visitor Arrivals to the United States as the indicator that measures the tourism market. It provides insights into the trends and patterns of international tourism, reflecting the number of visitors arriving in the U.S. each month.\n\n\nCode\nvisitors &lt;- read.csv(\"./data/visitors.csv\", header=TRUE)\nvisitors$time &lt;- as.Date(visitors$time)\n\ngg &lt;- ggplot(data = visitors, aes(x = time, y = count)) +   \n  geom_line(color='purple') +  \n  labs(x = \"Year\", y = \"Number of Visitors\", title = \"Non-U.S. Resident Visitor Arrivals to the U.S.\")\n\nplotly_gg &lt;- ggplotly(gg)\nplotly_gg\n\n\n\n\n\n\nThe data on visitor arrivals to the United States shows a clear seasonal pattern, with a stable, gradual increase from 2005 to 2020. This pattern was driven by consistent global tourism growth and improved travel accessibility. However, in 2020, there was a sharp decline in arrivals due to the COVID-19 pandemic, which caused travel restrictions, lockdowns, and a significant reduction in international mobility. Since then, there has been a slow recovery in visitor numbers, although they have not yet reached pre-pandemic levels. The gradual recovery reflects the ongoing adjustments in the global travel industry and the challenges posed by the lingering effects of the pandemic.",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "The U.S. Dollar Index (DXY) is a key measure of the value of the U.S. dollar relative to a basket of foreign currencies. As the world’s primary reserve currency, the U.S. dollar plays a significant role in global trade, finance, and economic stability. The index helps track fluctuations in the dollar’s strength and provides valuable insights into its influence on both domestic and international markets.\nThis project aims to analyze the fluctuations of the U.S. Dollar Index (DXY) over time and explore its impact on several key aspects of both the U.S. and global economies. By analyzing time series data, this project will investigate how changes in the U.S. dollar influence various sectors and provide a broader understanding of its economic significance.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#understanding-the-u.s.-dollar-index-dxy",
    "href": "introduction.html#understanding-the-u.s.-dollar-index-dxy",
    "title": "Introduction",
    "section": "",
    "text": "The U.S. Dollar Index (DXY) is a key measure of the value of the U.S. dollar relative to a basket of foreign currencies. As the world’s primary reserve currency, the U.S. dollar plays a significant role in global trade, finance, and economic stability. The index helps track fluctuations in the dollar’s strength and provides valuable insights into its influence on both domestic and international markets.\nThis project aims to analyze the fluctuations of the U.S. Dollar Index (DXY) over time and explore its impact on several key aspects of both the U.S. and global economies. By analyzing time series data, this project will investigate how changes in the U.S. dollar influence various sectors and provide a broader understanding of its economic significance.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#the-big-picture",
    "href": "introduction.html#the-big-picture",
    "title": "Introduction",
    "section": "The Big Picture",
    "text": "The Big Picture\n\n\n\nThe U.S. Dollar Index (DXY) has a wide-reaching impact on many areas of the global economy, making it a critical subject of study. This analysis will consider the following five main areas:\n\nU.S. International Trade: The value of the dollar directly affects the volume and value of U.S. imports and exports. Understanding this relationship is key to analyzing how global trade dynamics shift in response to currency fluctuations.\nDomestic Economic Indicators: The strength or weakness of the dollar has implications for domestic economic growth, employment rates, and inflation. These indicators are essential for assessing the broader economic health of the United States.\nThe Gold Market: The price of gold is often inversely related to the U.S. dollar. Examining how the dollar’s fluctuations affect gold prices can shed light on global investor behavior and market sentiment.\nGlobal Capital Markets: Changes in the value of the dollar can influence capital flows, global investment decisions, and asset allocations. This section will explore the dollar’s role in shaping global financial markets.\nGlobal Commodity Prices: As many commodities are priced in U.S. dollars, shifts in the dollar’s value can have significant effects on the pricing and demand for key resources like oil and metals.\nCOVID-19 Impact: The COVID-19 pandemic has had a profound effect on global economies, including currency markets. This section will examine how the pandemic influenced the U.S. Dollar Index and its effects on various economic sectors before and after the crisis.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#guiding-questions",
    "href": "introduction.html#guiding-questions",
    "title": "Introduction",
    "section": "Guiding Questions",
    "text": "Guiding Questions\n\nWhat effects does a stronger U.S. dollar have on U.S. exports?\nHow do changes in the U.S. dollar impact overall demand within the U.S. economy?\nWhat is the relationship between the U.S. dollar and inflation rates?\nWhat are the long-term effects of a volatile U.S. dollar on economic stability and growth in the U.S.?\nHow does the U.S. Dollar Index correlate with fluctuations in gold prices over time?\nAre there certain periods when gold’s price movement is especially sensitive to changes in the dollar?\nHow does the strength or weakness of the U.S. dollar influence global capital flows, especially in emerging markets?\nHow does the U.S. dollar influence global oil prices?\nHow did the Federal Reserve’s response to COVID-19 influence the U.S. dollar’s strength or weakness?\nWhat long-term changes in the U.S. Dollar Index can be observed after the COVID-19 crisis?",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#literature-review",
    "href": "introduction.html#literature-review",
    "title": "Introduction",
    "section": "Literature Review",
    "text": "Literature Review\n\nU.S. International Trade\nBruno and Shin (2020)1 investigate the impact of U.S. dollar appreciation on international trade, focusing on the financial channel through which exchange rates influence export performance. They highlight that while a stronger dollar typically improves trade competitiveness for exporters, it also tightens credit conditions, particularly for firms reliant on dollar-funded bank credit. Their study shows that exporters with greater exposure to dollar-based financing experience a significant slowdown in exports due to reduced credit availability, even when controlling for other factors. The authors argue that this financial channel, which operates counter to the competitiveness channel, has a substantial effect on global trade, especially for credit-intensive sectors. Their findings emphasize the importance of the U.S. dollar not only as a trade currency but also as a key factor in shaping global trade finance, with dollar fluctuations having a notable impact on export growth.\n\n\nDomestic Macroeconomic Factors\nManning and Andrianacos (2020)2 explore the relationship between U.S. dollar movements and domestic inflation, using cointegration analysis to assess both short-term and long-term effects. Their study finds that, in the long run, there is no significant relationship between the yen/dollar exchange rate and U.S. price levels. However, in the short term, the authors observe that U.S. monetary authorities adjust policies in response to changes in consumer prices and exchange rates, although the price level itself does not directly respond to fluctuations in the exchange rate. This suggests that while the U.S. dollar may influence inflationary pressures in the short term, it does not have a lasting impact on the domestic price level when controlling for other macroeconomic factors, such as income and interest rates. Their findings contribute to the understanding of how domestic economic conditions, alongside currency movements, shape inflation dynamics in the U.S. economy.\n\n\nThe Gold Market\nMo, Nie, and Jiang (2020)3 explore the dynamic relationships between the gold market, the U.S. dollar, and the crude oil market, with a particular focus on the impact of the global financial crisis. Their analysis reveals that there is a long-term dependence among these markets, with a positive dynamic relationship between gold and oil, and a negative relationship between oil and the U.S. dollar. Using fractional cointegration and DCC-MGARCH models, they find that fluctuations in the U.S. dollar have a notable effect on the gold market, particularly after the 2007-2009 financial crisis. The study also highlights a non-linear causal relationship, where gold influences the U.S. dollar and the U.S. dollar in turn affects crude oil prices. These findings emphasize the interconnectedness of the gold market with both the dollar and the oil market, offering valuable insights for investors and policymakers in managing portfolios and crafting macroeconomic strategies.\n\n\nGlobal Capital Markets\nSiddiqui (2020)4 critically reviews the role of the U.S. dollar in the global economy, particularly in light of the U.S.’s relative decline as a global economic power. Despite this decline, the U.S. continues to dominate global financial systems through the operations of multinational corporations and its control over international financial architecture. The study emphasizes the central role of the U.S. dollar as the world’s primary reserve currency, while also acknowledging the rising challenge from the Chinese renminbi. Siddiqui argues that while the renminbi poses a potential threat to the U.S. dollar’s supremacy, it is unlikely to replace the dollar as the global currency in the near future. The paper highlights the ongoing importance of the U.S. dollar in global capital markets, as well as the growing pressures on the U.S. economy due to persistent trade deficits. This underscores the complex dynamics of currency dominance and its implications for global economic stability.\n\n\nGlobal Commodity Prices\nBoz, Gopinath, and Plagborg-Møller (2020)5 examine the influence of the U.S. dollar on global trade and commodity prices. They find that fluctuations in the U.S. dollar exchange rate significantly affect trade prices and volumes. A stronger U.S. dollar tends to decrease global trade volumes, including commodities, with a 1% appreciation in the dollar leading to a 0.6-0.8% decline in trade volumes. Their study highlights the U.S. dollar’s dominant role in global trade, suggesting that its fluctuations are a key predictor of commodity prices and global inflation, particularly in markets for oil and metals. This reinforces the notion that the U.S. dollar is a central factor in shaping commodity price movements worldwide.\n\n\nCOVID-19 Impact\nAccording to Bertaut et al. (2023)6, despite the increased geopolitical risks and the rise of alternative currencies, the U.S. dollar’s position as the world’s primary reserve currency remained largely stable post-COVID. The U.S. Dollar Index (DXY), which measures the dollar’s strength against a basket of currencies, reflected heightened volatility during the pandemic as global markets reacted to economic uncertainties. However, the dollar’s central role in global finance was reinforced, with countries continuing to anchor their currencies to the dollar. The author suggest that while challenges to dollar dominance, such as the rise of the Chinese renminbi and digital currencies, are emerging, the U.S. dollar’s status remains secure, particularly due to its liquidity, stability, and the extensive use of dollar-denominated assets in international markets.\n\n\nReferences\n\n\n1. Bruno, V. & Shin, H. S. Dollar and exports. The Review of Financial Studies 36, 2963–2996 (2023).\n\n\n2. Manning, L. M. & Andrianacos, D. Dollar movements and inflation: A cointegration analysis. Applied Economics 25, 1483–1488 (1993).\n\n\n3. Mo, B., Nie, H. & Jiang, Y. Dynamic linkages among the gold market, US dollar and crude oil market. Physica A: Statistical Mechanics and its Applications 491, 984–994 (2018).\n\n\n4. Siddiqui, K. The US dollar and the world economy: A critical review. Athens Journal of Business & Economics 6, 21–43 (2020).\n\n\n5. Boz, E., Gopinath, G. & Plagborg-Møller, M. Global trade and the dollar. (2017).\n\n\n6. Bertaut, C., Von Beschwitz, B. & Curcuru, S. \" the international role of the US dollar\" post-COVID edition. (2023).",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html",
    "href": "multivariate_ts_models.html",
    "title": "Multivariate TS Models",
    "section": "",
    "text": "Based on the data and previous univariate analysis, we will begin conducting multivariate analysis in this section. Our data science questions include:\n\nWhat factors interact with the US Dollar Index?\nWhat exogenous variables affect the US Dollar Index?\nWhat factors are influenced by the US Dollar Index?\n\nBefore constructing Multivariate Time Series Models, we will first conduct a literature review (see the Introduction part) and analyze the mechanisms among variables from an economic perspective.\n\n\nTrade Balance\n\nThe expansion of the trade deficit leads to the depreciation of the US dollar.\nA trade deficit means that the US imports more than it exports. According to the Balance of Payments Identity (Current Account + Financial Account = 0), a trade deficit (i.e., a negative current account) means that the financial account must be positive. This is reflected in capital inflows. Typically, the US issues government bonds and attracts foreign investment to balance the trade deficit. However, the increased supply of dollars in the foreign exchange market will cause the dollar to depreciate, or foreign investors may become concerned about the US fiscal situation, leading to reduced demand for the dollar and further depreciation.\nThe depreciation of the dollar leads to a reduction in the trade deficit.\nWhen the dollar depreciates, US goods and services become relatively cheaper in international markets, which may increase US exports. At the same time, imported goods become relatively expensive, leading to a reduction in US imports. Therefore, the depreciation of the dollar generally reduces the trade deficit.\n\nGlobal Commodity Market\n\nA stronger dollar leads to a decrease in global commodity prices.\nSince the dollar is the global reserve and trading currency, commodities (such as oil, gold, copper, aluminum, etc.) are typically priced in dollars. When the dollar appreciates, the cost for holders of other currencies to buy dollar-priced commodities increases, which leads to a reduction in demand and lowers commodity prices. Additionally, investors may shift funds from physical assets like commodities into dollar-denominated assets, further driving down commodity prices.\nChanges in commodity prices also influence the US Dollar Index.\nA rise in commodity prices, especially oil and metal prices, often puts pressure on global inflation. This, in turn, affects the Dollar Index. Moreover, commodity price fluctuations often reflect changes in the global economy. For example, an increase in oil prices may indicate a slowdown in global economic growth or supply-demand imbalances. These factors could lead to higher demand for the dollar as a safe-haven currency, thus pushing up the Dollar Index.\n\nStock Market\n\nThe risk and return associated with stocks are relatively high, and the dollar can serve as a safe-haven asset. Therefore, there is a competitive relationship between the two. Generally speaking, the stock market and the Dollar Index have an inverse relationship. When global investors have a higher risk appetite or when the stock market is strong, capital tends to flow into the stock market. This reduces demand for the dollar and leads to a depreciation of the dollar. On the other hand, when the dollar appreciates, investors may prefer to move funds into low-risk assets like bonds. This leads to capital outflows from the stock market and puts downward pressure on it, especially on overvalued stocks. However, a stronger dollar may also reflect a robust economy, which could push stock prices higher.\n\nGold Market\n\nThe dollar and gold also tend to show inverse fluctuations due to their competitive relationship.\nA stronger dollar leads to a decrease in gold prices.\nFirst, gold prices are usually denominated in dollars. When the dollar appreciates, the cost of gold in other currencies increases, reducing demand and lowering gold prices. Secondly, a stronger dollar may be due to the Federal Reserve raising interest rates. In this case, investors are more likely to invest in higher-yielding assets (such as dollar-denominated bonds) and reduce holdings in non-interest-bearing assets like gold, leading to a decline in gold prices.\nAn increase in gold prices leads to the depreciation of the dollar.\nWhen the dollar weakens or global economic uncertainty rises, the dollar may no longer be considered a safe-haven asset, and gold becomes the preferred choice. Investors may tend to buy gold as a hedge against inflation or currency devaluation, leading to decreased demand for the dollar and causing it to depreciate.\n\n\n\n\nGDP\n\nEconomic growth drives dollar appreciation.\nWhen a country’s GDP grows strongly, it typically reflects good economic performance and attracts foreign investors’ attention. This capital inflow (e.g., foreign direct investment, securities investment) increases demand for the country’s currency, which in our case is the US dollar, leading to dollar appreciation.\n\nUnemployment Rate\n\nA higher unemployment rate leads to dollar depreciation.\n\nMechanism 1\nThe unemployment rate mainly affects the economy, which in turn influences the Dollar Index. There is an inverse relationship between the unemployment rate and GDP growth. A higher unemployment rate typically indicates an economic recession or depression, where businesses reduce hiring, which is often accompanied by a decrease in consumption and investment. This reduces the ability to attract foreign investment into the US, leading to reduced demand for dollar-denominated assets and a depreciation of the dollar.\nMechanism 2\nWhen the unemployment rate is high, the Federal Reserve may adopt loose monetary policies (e.g., lowering interest rates or quantitative easing) to stimulate the economy and reduce unemployment. Such loose monetary policies typically lead to dollar depreciation because lower interest rates reduce the relative attractiveness of the dollar, making it less likely to attract foreign capital inflows, thereby decreasing demand for the dollar.\n\n\nCPI\n\nAn increase in the CPI drives dollar appreciation.\nWhen the CPI rises, it indicates inflation. In this case, the Federal Reserve may adopt a tightening monetary policy, such as raising interest rates, to control inflation. Higher interest rates make the dollar more attractive because they can attract foreign capital inflows, increasing demand for the dollar and thus driving up its value.\nExpectations are also a factor. If inflation expectations rise, markets may anticipate that the Federal Reserve will take more tightening measures, which could lead to dollar appreciation.\n\n\n\n\nReal Estate Market\n\nA stronger dollar typically indicates a relatively strong US economy, and interest rates may rise. Higher mortgage rates increase borrowing costs, which can suppress demand for housing and lead to a decline in housing prices.\nHowever, a stronger dollar can also boost confidence among homebuyers and global investors. This leads to increased capital inflows into US real estate, pushing housing prices up.\n\nTherefore, the impact may be a combined effect.\nTourism\n\nWhen the dollar appreciates, foreign tourists need to exchange more of their local currency for dollars, which increases their travel costs. Some tourists may opt for other travel destinations, leading to a decrease in the number of tourists visiting the US. Therefore, US tourism may decline with a stronger dollar.",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "introduction.html#understanding-the-u.s.-dollar-index",
    "href": "introduction.html#understanding-the-u.s.-dollar-index",
    "title": "Introduction",
    "section": "",
    "text": "The U.S. Dollar Index (DXY) is a key measure of the value of the U.S. dollar relative to a basket of foreign currencies. As the world’s primary reserve currency, the U.S. dollar plays a significant role in global trade, finance, and economic stability. The index helps track fluctuations in the dollar’s strength and provides valuable insights into its influence on both domestic and international markets.\nThis project aims to analyze the fluctuations of the U.S. Dollar Index (DXY) over time and explore its impact on several key aspects of both the U.S. and global economies. By analyzing time series data, this project will investigate how changes in the U.S. dollar influence various sectors and provide a broader understanding of its economic significance.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#multivariate-analysis",
    "href": "multivariate_ts_models.html#multivariate-analysis",
    "title": "Multivariate TS Models",
    "section": "",
    "text": "Based on the data and previous univariate analysis, we will begin conducting multivariate analysis in this section. Our data science questions include:\n\nWhat factors interact with the US Dollar Index?\nWhat exogenous variables affect the US Dollar Index?\nWhat factors are influenced by the US Dollar Index?\n\nBefore constructing Multivariate Time Series Models, we will first conduct a literature review (see the Introduction part) and analyze the mechanisms among variables from an economic perspective.\n\n\nTrade Balance\n\nThe expansion of the trade deficit leads to the depreciation of the US dollar.\nA trade deficit means that the US imports more than it exports. According to the Balance of Payments Identity (Current Account + Financial Account = 0), a trade deficit (i.e., a negative current account) means that the financial account must be positive. This is reflected in capital inflows. Typically, the US issues government bonds and attracts foreign investment to balance the trade deficit. However, the increased supply of dollars in the foreign exchange market will cause the dollar to depreciate, or foreign investors may become concerned about the US fiscal situation, leading to reduced demand for the dollar and further depreciation.\nThe depreciation of the dollar leads to a reduction in the trade deficit.\nWhen the dollar depreciates, US goods and services become relatively cheaper in international markets, which may increase US exports. At the same time, imported goods become relatively expensive, leading to a reduction in US imports. Therefore, the depreciation of the dollar generally reduces the trade deficit.\n\nGlobal Commodity Market\n\nA stronger dollar leads to a decrease in global commodity prices.\nSince the dollar is the global reserve and trading currency, commodities (such as oil, gold, copper, aluminum, etc.) are typically priced in dollars. When the dollar appreciates, the cost for holders of other currencies to buy dollar-priced commodities increases, which leads to a reduction in demand and lowers commodity prices. Additionally, investors may shift funds from physical assets like commodities into dollar-denominated assets, further driving down commodity prices.\nChanges in commodity prices also influence the US Dollar Index.\nA rise in commodity prices, especially oil and metal prices, often puts pressure on global inflation. This, in turn, affects the Dollar Index. Moreover, commodity price fluctuations often reflect changes in the global economy. For example, an increase in oil prices may indicate a slowdown in global economic growth or supply-demand imbalances. These factors could lead to higher demand for the dollar as a safe-haven currency, thus pushing up the Dollar Index.\n\nStock Market\n\nThe risk and return associated with stocks are relatively high, and the dollar can serve as a safe-haven asset. Therefore, there is a competitive relationship between the two. Generally speaking, the stock market and the Dollar Index have an inverse relationship. When global investors have a higher risk appetite or when the stock market is strong, capital tends to flow into the stock market. This reduces demand for the dollar and leads to a depreciation of the dollar. On the other hand, when the dollar appreciates, investors may prefer to move funds into low-risk assets like bonds. This leads to capital outflows from the stock market and puts downward pressure on it, especially on overvalued stocks. However, a stronger dollar may also reflect a robust economy, which could push stock prices higher.\n\nGold Market\n\nThe dollar and gold also tend to show inverse fluctuations due to their competitive relationship.\nA stronger dollar leads to a decrease in gold prices.\nFirst, gold prices are usually denominated in dollars. When the dollar appreciates, the cost of gold in other currencies increases, reducing demand and lowering gold prices. Secondly, a stronger dollar may be due to the Federal Reserve raising interest rates. In this case, investors are more likely to invest in higher-yielding assets (such as dollar-denominated bonds) and reduce holdings in non-interest-bearing assets like gold, leading to a decline in gold prices.\nAn increase in gold prices leads to the depreciation of the dollar.\nWhen the dollar weakens or global economic uncertainty rises, the dollar may no longer be considered a safe-haven asset, and gold becomes the preferred choice. Investors may tend to buy gold as a hedge against inflation or currency devaluation, leading to decreased demand for the dollar and causing it to depreciate.\n\n\n\n\nGDP\n\nEconomic growth drives dollar appreciation.\nWhen a country’s GDP grows strongly, it typically reflects good economic performance and attracts foreign investors’ attention. This capital inflow (e.g., foreign direct investment, securities investment) increases demand for the country’s currency, which in our case is the US dollar, leading to dollar appreciation.\n\nUnemployment Rate\n\nA higher unemployment rate leads to dollar depreciation.\n\nMechanism 1\nThe unemployment rate mainly affects the economy, which in turn influences the Dollar Index. There is an inverse relationship between the unemployment rate and GDP growth. A higher unemployment rate typically indicates an economic recession or depression, where businesses reduce hiring, which is often accompanied by a decrease in consumption and investment. This reduces the ability to attract foreign investment into the US, leading to reduced demand for dollar-denominated assets and a depreciation of the dollar.\nMechanism 2\nWhen the unemployment rate is high, the Federal Reserve may adopt loose monetary policies (e.g., lowering interest rates or quantitative easing) to stimulate the economy and reduce unemployment. Such loose monetary policies typically lead to dollar depreciation because lower interest rates reduce the relative attractiveness of the dollar, making it less likely to attract foreign capital inflows, thereby decreasing demand for the dollar.\n\n\nCPI\n\nAn increase in the CPI drives dollar appreciation.\nWhen the CPI rises, it indicates inflation. In this case, the Federal Reserve may adopt a tightening monetary policy, such as raising interest rates, to control inflation. Higher interest rates make the dollar more attractive because they can attract foreign capital inflows, increasing demand for the dollar and thus driving up its value.\nExpectations are also a factor. If inflation expectations rise, markets may anticipate that the Federal Reserve will take more tightening measures, which could lead to dollar appreciation.\n\n\n\n\nReal Estate Market\n\nA stronger dollar typically indicates a relatively strong US economy, and interest rates may rise. Higher mortgage rates increase borrowing costs, which can suppress demand for housing and lead to a decline in housing prices.\nHowever, a stronger dollar can also boost confidence among homebuyers and global investors. This leads to increased capital inflows into US real estate, pushing housing prices up.\n\nTherefore, the impact may be a combined effect.\nTourism\n\nWhen the dollar appreciates, foreign tourists need to exchange more of their local currency for dollars, which increases their travel costs. Some tourists may opt for other travel destinations, leading to a decrease in the number of tourists visiting the US. Therefore, US tourism may decline with a stronger dollar.",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#var-usd-trade-deficit-global-commodity-price-cpi",
    "href": "multivariate_ts_models.html#var-usd-trade-deficit-global-commodity-price-cpi",
    "title": "Multivariate TS Models",
    "section": "VAR: USD ~ Trade Deficit + Global Commodity Price + CPI",
    "text": "VAR: USD ~ Trade Deficit + Global Commodity Price + CPI",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#var-usd-stock-price-gold-price",
    "href": "multivariate_ts_models.html#var-usd-stock-price-gold-price",
    "title": "Multivariate TS Models",
    "section": "VAR: USD ~ Stock Price + Gold Price",
    "text": "VAR: USD ~ Stock Price + Gold Price",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#arimax-usd-gdp-unemployment-rate-cpi",
    "href": "multivariate_ts_models.html#arimax-usd-gdp-unemployment-rate-cpi",
    "title": "Multivariate TS Models",
    "section": "ARIMAX: USD ~ GDP + Unemployment Rate + CPI",
    "text": "ARIMAX: USD ~ GDP + Unemployment Rate + CPI",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#arimax-house-price-usd-gdp-cpi",
    "href": "multivariate_ts_models.html#arimax-house-price-usd-gdp-cpi",
    "title": "Multivariate TS Models",
    "section": "ARIMAX: House Price ~ USD + GDP + CPI",
    "text": "ARIMAX: House Price ~ USD + GDP + CPI",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  },
  {
    "objectID": "multivariate_ts_models.html#sarimax-tourism-usd",
    "href": "multivariate_ts_models.html#sarimax-tourism-usd",
    "title": "Multivariate TS Models",
    "section": "SARIMAX: Tourism ~ USD",
    "text": "SARIMAX: Tourism ~ USD",
    "crumbs": [
      "Multivariate TS Models (ARIMAX/SARIMAX/VAR)"
    ]
  }
]